{"version":3,"sources":["./node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","./node_modules/ngx-bootstrap/alert/fesm5/ngx-bootstrap-alert.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACkE;AACpE,CAAC,2BAA2B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sDAAsD;;AAEtD;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA;;AAEA,gDAAgD,cAAc;;AAE9D,CAAC;AACD;;;;;;;;;;;;;ACtJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC0F;AAC1F;AACA;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,sBAAsB,EAAE,wBAAwB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,6TAA6T;AAC7T,qCAAqC,qEAAuB;AAC5D,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,oBAAoB;AAC7B,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA,IAAI,wDAAU;AACd,QAAQ,oEAAQ;AAChB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAEmD;AACpD","file":"common.js","sourcesContent":["(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n  (global = global || self, factory(global['custom-tooltips'] = {}));\r\n}(this, function (exports) { 'use strict';\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\r\n  function CustomTooltips(tooltipModel) {\r\n    var _this = this;\r\n\r\n    // Add unique id if not exist\r\n    var _setCanvasId = function _setCanvasId() {\r\n      var _idMaker = function _idMaker() {\r\n        var _hex = 16;\r\n        var _multiplier = 0x10000;\r\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\r\n      };\r\n\r\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\r\n\r\n      _this._chart.canvas.id = _canvasId;\r\n      return _canvasId;\r\n    };\r\n\r\n    var ClassName = {\r\n      ABOVE: 'above',\r\n      BELOW: 'below',\r\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\r\n      NO_TRANSFORM: 'no-transform',\r\n      TOOLTIP_BODY: 'tooltip-body',\r\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\r\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\r\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\r\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\r\n      TOOLTIP_HEADER: 'tooltip-header',\r\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\r\n    };\r\n    var Selector = {\r\n      DIV: 'div',\r\n      SPAN: 'span',\r\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\r\n    };\r\n    var tooltip = document.getElementById(Selector.TOOLTIP);\r\n\r\n    if (!tooltip) {\r\n      tooltip = document.createElement('div');\r\n      tooltip.id = Selector.TOOLTIP;\r\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\r\n\r\n      this._chart.canvas.parentNode.appendChild(tooltip);\r\n    } // Hide if no tooltip\r\n\r\n\r\n    if (tooltipModel.opacity === 0) {\r\n      tooltip.style.opacity = 0;\r\n      return;\r\n    } // Set caret Position\r\n\r\n\r\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\r\n\r\n    if (tooltipModel.yAlign) {\r\n      tooltip.classList.add(tooltipModel.yAlign);\r\n    } else {\r\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\r\n    } // Set Text\r\n\r\n\r\n    if (tooltipModel.body) {\r\n      var titleLines = tooltipModel.title || [];\r\n      var tooltipHeader = document.createElement(Selector.DIV);\r\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\r\n      titleLines.forEach(function (title) {\r\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\r\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\r\n        tooltipHeaderTitle.innerHTML = title;\r\n        tooltipHeader.appendChild(tooltipHeaderTitle);\r\n      });\r\n      var tooltipBody = document.createElement(Selector.DIV);\r\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\r\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\r\n        return item.lines;\r\n      });\r\n      tooltipBodyItems.forEach(function (item, i) {\r\n        var tooltipBodyItem = document.createElement(Selector.DIV);\r\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\r\n        var colors = tooltipModel.labelColors[i];\r\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\r\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\r\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\r\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\r\n\r\n        if (item[0].split(':').length > 1) {\r\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\r\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\r\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\r\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\r\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\r\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\r\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\r\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\r\n        } else {\r\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\r\n\r\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\r\n          _tooltipBodyItemValue.innerHTML = item[0];\r\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\r\n        }\r\n\r\n        tooltipBody.appendChild(tooltipBodyItem);\r\n      });\r\n      tooltip.innerHTML = '';\r\n      tooltip.appendChild(tooltipHeader);\r\n      tooltip.appendChild(tooltipBody);\r\n    }\r\n\r\n    var position = this._chart.canvas.getBoundingClientRect();\r\n\r\n    var positionY = this._chart.canvas.offsetTop;\r\n    var positionX = this._chart.canvas.offsetLeft;\r\n    var positionLeft = positionX + tooltipModel.caretX;\r\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\r\n\r\n    var halfWidth = tooltipModel.width / 2;\r\n\r\n    if (positionLeft + halfWidth > position.width) {\r\n      positionLeft -= halfWidth;\r\n    } else if (positionLeft < halfWidth) {\r\n      positionLeft += halfWidth;\r\n    } // Display, position, and set styles for font\r\n\r\n\r\n    tooltip.style.opacity = 1;\r\n    tooltip.style.left = positionLeft + \"px\";\r\n    tooltip.style.top = positionTop + \"px\";\r\n  }\r\n\r\n  var customTooltips = CustomTooltips; // TODO: camel-case\r\n\r\n  exports.CustomTooltips = CustomTooltips;\r\n  exports.customTooltips = customTooltips;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n//# sourceMappingURL=custom-tooltips.js.map\r\n","import { __decorate, __metadata } from 'tslib';\r\nimport { Injectable, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, EventEmitter, NgModule } from '@angular/core';\r\nimport { OnChange } from 'ngx-bootstrap/utils';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AlertConfig = /** @class */ (function () {\r\n    function AlertConfig() {\r\n        /**\r\n         * default alert type\r\n         */\r\n        this.type = 'warning';\r\n        /**\r\n         * is alerts are dismissible by default\r\n         */\r\n        this.dismissible = false;\r\n        /**\r\n         * default time before alert will dismiss\r\n         */\r\n        this.dismissOnTimeout = undefined;\r\n    }\r\n    AlertConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return AlertConfig;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AlertComponent = /** @class */ (function () {\r\n    function AlertComponent(_config, changeDetection) {\r\n        var _this = this;\r\n        this.changeDetection = changeDetection;\r\n        /**\r\n         * Alert type.\r\n         * Provides one of four bootstrap supported contextual classes:\r\n         * `success`, `info`, `warning` and `danger`\r\n         */\r\n        this.type = 'warning';\r\n        /**\r\n         * If set, displays an inline \"Close\" button\r\n         */\r\n        this.dismissible = false;\r\n        /**\r\n         * Is alert visible\r\n         */\r\n        this.isOpen = true;\r\n        /**\r\n         * This event fires immediately after close instance method is called,\r\n         * $event is an instance of Alert component.\r\n         */\r\n        this.onClose = new EventEmitter();\r\n        /**\r\n         * This event fires when alert closed, $event is an instance of Alert component\r\n         */\r\n        this.onClosed = new EventEmitter();\r\n        this.classes = '';\r\n        this.dismissibleChange = new EventEmitter();\r\n        Object.assign(this, _config);\r\n        this.dismissibleChange.subscribe((/**\r\n         * @param {?} dismissible\r\n         * @return {?}\r\n         */\r\n        function (dismissible) {\r\n            _this.classes = _this.dismissible ? 'alert-dismissible' : '';\r\n            _this.changeDetection.markForCheck();\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AlertComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.dismissOnTimeout) {\r\n            // if dismissOnTimeout used as attr without binding, it will be a string\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.close(); }), parseInt((/** @type {?} */ (this.dismissOnTimeout)), 10));\r\n        }\r\n    };\r\n    // todo: animation ` If the .fade and .in classes are present on the element,\r\n    // the alert will fade out before it is removed`\r\n    /**\r\n     * Closes an alert by removing it from the DOM.\r\n     */\r\n    // todo: animation ` If the .fade and .in classes are present on the element,\r\n    // the alert will fade out before it is removed`\r\n    /**\r\n     * Closes an alert by removing it from the DOM.\r\n     * @return {?}\r\n     */\r\n    AlertComponent.prototype.close = \r\n    // todo: animation ` If the .fade and .in classes are present on the element,\r\n    // the alert will fade out before it is removed`\r\n    /**\r\n     * Closes an alert by removing it from the DOM.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        this.onClose.emit(this);\r\n        this.isOpen = false;\r\n        this.changeDetection.markForCheck();\r\n        this.onClosed.emit(this);\r\n    };\r\n    AlertComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'alert,bs-alert',\r\n                    template: \"<ng-template [ngIf]=\\\"isOpen\\\">\\n  <div [class]=\\\"'alert alert-' + type\\\" role=\\\"alert\\\" [ngClass]=\\\"classes\\\">\\n    <ng-template [ngIf]=\\\"dismissible\\\">\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        <span class=\\\"sr-only\\\">Close</span>\\n      </button>\\n    </ng-template>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\r\n                    changeDetection: ChangeDetectionStrategy.OnPush\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    AlertComponent.ctorParameters = function () { return [\r\n        { type: AlertConfig },\r\n        { type: ChangeDetectorRef }\r\n    ]; };\r\n    AlertComponent.propDecorators = {\r\n        type: [{ type: Input }],\r\n        dismissible: [{ type: Input }],\r\n        dismissOnTimeout: [{ type: Input }],\r\n        isOpen: [{ type: Input }],\r\n        onClose: [{ type: Output }],\r\n        onClosed: [{ type: Output }]\r\n    };\r\n    __decorate([\r\n        OnChange(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AlertComponent.prototype, \"dismissible\", void 0);\r\n    return AlertComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar AlertModule = /** @class */ (function () {\r\n    function AlertModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AlertModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return { ngModule: AlertModule, providers: [AlertConfig] };\r\n    };\r\n    AlertModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [AlertComponent],\r\n                    exports: [AlertComponent],\r\n                    entryComponents: [AlertComponent]\r\n                },] }\r\n    ];\r\n    return AlertModule;\r\n}());\r\n\r\nexport { AlertComponent, AlertConfig, AlertModule };\r\n//# sourceMappingURL=ngx-bootstrap-alert.js.map\r\n"],"sourceRoot":"webpack:///"}