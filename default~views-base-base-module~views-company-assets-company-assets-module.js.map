{"version":3,"sources":["./node_modules/ngx-bootstrap/carousel/fesm5/ngx-bootstrap-carousel.js","./node_modules/ngx-bootstrap/collapse/fesm5/ngx-bootstrap-collapse.js","./node_modules/ngx-bootstrap/pagination/fesm5/ngx-bootstrap-pagination.js","./node_modules/ngx-bootstrap/popover/fesm5/ngx-bootstrap-popover.js","./node_modules/ngx-bootstrap/progressbar/fesm5/ngx-bootstrap-progressbar.js","./node_modules/ngx-bootstrap/tooltip/fesm5/ngx-bootstrap-tooltip.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACiF;AAC1D;AACT;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA,2BAA2B,8DAAU;AACrC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,qBAAqB,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,qCAAqC,iCAAiC,EAAE;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB,iEAAK;AACzB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,eAAe;AAC9C,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iCAAiC,sEAAsE,EAAE;AACzG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,0CAA0C,sDAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,iCAAiC,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,iCAAiC,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,8BAA8B,EAAE;AAC9D,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,oBAAoB,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,6BAA6B,EAAE;AACzD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,0BAA0B,EAAE;AAC1D;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ;AAClD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,iCAAiC,EAAE;AACjE;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,oBAAoB,EAAE;AACpD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,iCAAiC,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,oBAAoB,EAAE;AACpD;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,oBAAoB,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,sYAAsY,eAAe,qIAAqI,wCAAwC;AAClkB,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,uBAAuB;AAChC,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,6BAA6B,OAAO,oDAAM,EAAE;AAC5C,4BAA4B,OAAO,oDAAM,EAAE;AAC3C,uBAAuB,OAAO,mDAAK,EAAE;AACrC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS;AACT,MAAM;AACN;AACA,kBAAkB,OAAO,yDAAW,2BAA2B,GAAG,OAAO,mDAAK,EAAE;AAChF,qBAAqB,OAAO,yDAAW,0BAA0B;AACjE,iBAAiB,OAAO,yDAAW,0BAA0B;AAC7D,oBAAoB,OAAO,yDAAW,yBAAyB,GAAG,OAAO,yDAAW,kCAAkC;AACtH;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAE4E;AAC7E;;;;;;;;;;;;;ACrxCA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAC8C;;AAErH;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,IAAI,iEAAK,EAAE,kCAAkC;AAC7C,IAAI,mEAAO,4BAA4B,iEAAK,EAAE,qCAAqC;AACnF;AACA,WAAW,EAAE;AACb;AACA,IAAI,iEAAK,EAAE,qCAAqC;AAChD,IAAI,mEAAO,4BAA4B,iEAAK,EAAE,kCAAkC;AAChF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC,mBAAmB,EAAE;AACtD;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,uCAAuC,EAAE;AACtE;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,oEAAgB;AAChC,MAAM;AACN;AACA,qBAAqB,OAAO,oDAAM,EAAE;AACpC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,sBAAsB,OAAO,yDAAW,uBAAuB,GAAG,OAAO,yDAAW,yBAAyB,GAAG,OAAO,yDAAW,iCAAiC;AACnK,uBAAuB,OAAO,yDAAW,+BAA+B;AACxE,sBAAsB,OAAO,yDAAW,6BAA6B;AACrE,wBAAwB,OAAO,yDAAW,+BAA+B;AACzE,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAE4C;AAC7C;;;;;;;;;;;;;ACzRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwI;AACrF;AACJ;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,uBAAuB,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,2CAA2C,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4IAA4I,0CAA0C,oBAAoB,gBAAgB,4DAA4D,uBAAuB,8FAA8F,0CAA0C,oBAAoB,gBAAgB,4DAA4D,mBAAmB;AACxiB;AACA,iBAAiB;AACjB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,yBAAyB;AAClC,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,4BAA4B,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE,2CAA2C,EAAE;AAC3E;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,yBAAyB;AAClC,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAE+J;AAChK;;;;;;;;;;;;;AC51BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4J;AACpF;AAC5B;AACmB;AAChB;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,qBAAqB;AACrB,uIAAuI,SAAS;AAChJ,2DAA2D,4BAA4B,OAAO,oCAAoC,0BAA0B,OAAO,6BAA6B,4BAA4B,OAAO,mCAAmC,0BAA0B,OAAO,iCAAiC,4BAA4B,OAAO,0EAA0E,wBAAwB,OAAO;AACpd,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4CAA4C;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,qBAAqB,EAAE;AAChD,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU,gDAAgD;AACnF;AACA;AACA,mDAAmD;AACnD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,qFAAsB,EAAE;AACxC,SAAS,OAAO,4EAAkB;AAClC,MAAM;AACN;AACA,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,mBAAmB,OAAO,mDAAK,EAAE;AACjC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,qFAAsB,EAAE,4EAAkB;AACjF;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAEoF;AACrF;;;;;;;;;;;;;ACxUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiH;AACrE;AACG;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,0PAA0P,cAAc;AACxQ,2CAA2C,oBAAoB,sBAAsB,OAAO;AAC5F,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS;AACT,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,eAAe,OAAO,yDAAW,uBAAuB,GAAG,OAAO,mDAAK,EAAE;AACzE,oBAAoB,OAAO,yDAAW,6BAA6B;AACnE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,2CAA2C,OAAO,kDAAI,EAAE,GAAG;AACpE,SAAS,OAAO,uDAAS;AACzB,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,yDAAW,4BAA4B;AACrE,oBAAoB,OAAO,yDAAW,iCAAiC;AACvE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAEmF;AACpF;;;;;;;;;;;;;AC9XA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuL;AACxG;AAChC;AACyB;AACT;AAClC;AACkB;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,iEAAK;AACxB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mDAAmD,uBAAuB,6BAA6B,OAAO,oCAAoC,0BAA0B,OAAO,gCAAgC,wBAAwB,OAAO,4DAA4D,oBAAoB,OAAO,2EAA2E,wBAAwB,OAAO;AACnb,iBAAiB;AACjB;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA,sBAAsB,2CAA2C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,YAAY,oEAAQ;AACpB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,qBAAqB,EAAE;AAChD,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB,2BAA2B,kDAAK;AAChC,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gBAAgB,yEAAa;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,qFAAsB,EAAE;AACxC,SAAS,sBAAsB;AAC/B,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS,OAAO,4EAAkB;AAClC,MAAM;AACN;AACA,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,mBAAmB,OAAO,mDAAK,EAAE;AACjC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,oDAAM,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,uBAAuB,OAAO,mDAAK,0BAA0B;AAC7D,sBAAsB,OAAO,mDAAK,+BAA+B;AACjE,mBAAmB,OAAO,mDAAK,4BAA4B;AAC3D,mBAAmB,OAAO,mDAAK,4BAA4B;AAC3D,yBAAyB,OAAO,mDAAK,kCAAkC;AACvE,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,uBAAuB,OAAO,mDAAK,2BAA2B;AAC9D,2BAA2B,OAAO,mDAAK,6BAA6B;AACpE,8BAA8B,OAAO,mDAAK,gCAAgC;AAC1E,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,2BAA2B,OAAO,mDAAK,6BAA6B;AACpE,2BAA2B,OAAO,yDAAW,oCAAoC;AACjF,+BAA+B,OAAO,oDAAM,EAAE;AAC9C;AACA,IAAI,wDAAU;AACd,QAAQ,oEAAQ;AAChB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,qFAAsB,EAAE,4EAAkB;AACjF;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAEoF;AACrF","file":"default~views-base-base-module~views-company-assets-company-assets-module.js","sourcesContent":["import { __spread } from 'tslib';\r\nimport { Injectable, Component, NgZone, Input, Output, EventEmitter, HostBinding, NgModule } from '@angular/core';\r\nimport { isBs3, LinkedList } from 'ngx-bootstrap/utils';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CarouselConfig = /** @class */ (function () {\r\n    function CarouselConfig() {\r\n        /* Default interval of auto changing of slides */\r\n        this.interval = 5000;\r\n        /* Is loop of auto changing of slides can be paused */\r\n        this.noPause = false;\r\n        /* Is slides can wrap from the last to the first slide */\r\n        this.noWrap = false;\r\n        /* Show carousel-indicators */\r\n        this.showIndicators = true;\r\n        /* Slides can be paused on focus */\r\n        this.pauseOnFocus = false;\r\n        /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\r\n        this.indicatorsByChunk = false;\r\n        /* If value more then 1 — carousel works in multilist mode */\r\n        this.itemsPerSlide = 1;\r\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\r\n            of visible elements (itemsPerSlide field) */\r\n        this.singleSlideOffset = false;\r\n    }\r\n    CarouselConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return CarouselConfig;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Returns the index of the last element in the array where predicate is true, and -1\r\n * otherwise.\r\n * @template T\r\n * @param {?} array The source array to search in\r\n * @param {?} predicate find calls predicate once for each element of the array, in descending\r\n * order, until it finds one where predicate returns true. If such an element is found,\r\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\r\n * @return {?}\r\n */\r\nfunction findLastIndex(array, predicate) {\r\n    /** @type {?} */\r\n    var l = array.length;\r\n    while (l--) {\r\n        if (predicate(array[l], l, array)) {\r\n            return l;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * @template T\r\n * @param {?} array\r\n * @param {?} size\r\n * @return {?}\r\n */\r\nfunction chunkByNumber(array, size) {\r\n    /** @type {?} */\r\n    var out = [];\r\n    /** @type {?} */\r\n    var n = Math.ceil((array.length) / size);\r\n    /** @type {?} */\r\n    var i = 0;\r\n    while (i < n) {\r\n        /** @type {?} */\r\n        var chunk = array.splice(0, (i === n - 1) && size < array.length ? array.length : size);\r\n        out.push(chunk);\r\n        i++;\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @enum {number} */\r\nvar Direction = {\r\n    UNKNOWN: 0,\r\n    NEXT: 1,\r\n    PREV: 2,\r\n};\r\nDirection[Direction.UNKNOWN] = 'UNKNOWN';\r\nDirection[Direction.NEXT] = 'NEXT';\r\nDirection[Direction.PREV] = 'PREV';\r\n/**\r\n * Base element to create carousel\r\n */\r\nvar CarouselComponent = /** @class */ (function () {\r\n    function CarouselComponent(config, ngZone) {\r\n        this.ngZone = ngZone;\r\n        /* If `true` - carousel indicators indicate slides chunks\r\n             works ONLY if singleSlideOffset = FALSE */\r\n        this.indicatorsByChunk = false;\r\n        /* If value more then 1 — carousel works in multilist mode */\r\n        this.itemsPerSlide = 1;\r\n        /* If `true` — carousel shifts by one element. By default carousel shifts by number\r\n             of visible elements (itemsPerSlide field) */\r\n        this.singleSlideOffset = false;\r\n        /**\r\n         * Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property\r\n         */\r\n        this.activeSlideChange = new EventEmitter(false);\r\n        /**\r\n         * Will be emitted when active slides has been changed in multilist mode\r\n         */\r\n        this.slideRangeChange = new EventEmitter();\r\n        /* Index to start display slides from it */\r\n        this.startFromIndex = 0;\r\n        this._slides = new LinkedList();\r\n        this._currentVisibleSlidesIndex = 0;\r\n        this.destroyed = false;\r\n        this.getActive = (/**\r\n         * @param {?} slide\r\n         * @return {?}\r\n         */\r\n        function (slide) { return slide.active; });\r\n        this.makeSlidesConsistent = (/**\r\n         * @param {?} slides\r\n         * @return {?}\r\n         */\r\n        function (slides) {\r\n            slides.forEach((/**\r\n             * @param {?} slide\r\n             * @param {?} index\r\n             * @return {?}\r\n             */\r\n            function (slide, index) { return slide.item.order = index; }));\r\n        });\r\n        Object.assign(this, config);\r\n    }\r\n    Object.defineProperty(CarouselComponent.prototype, \"activeSlide\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._currentActiveSlide;\r\n        },\r\n        /** Index of currently displayed slide(started for 0) */\r\n        set: /**\r\n         * Index of currently displayed slide(started for 0)\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        function (index) {\r\n            if (this.multilist) {\r\n                return;\r\n            }\r\n            if (this._slides.length && index !== this._currentActiveSlide) {\r\n                this._select(index);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CarouselComponent.prototype, \"interval\", {\r\n        /**\r\n         * Delay of item cycling in milliseconds. If false, carousel won't cycle\r\n         * automatically.\r\n         */\r\n        get: /**\r\n         * Delay of item cycling in milliseconds. If false, carousel won't cycle\r\n         * automatically.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._interval;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._interval = value;\r\n            this.restartTimer();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CarouselComponent.prototype, \"slides\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._slides.toArray();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CarouselComponent.prototype, \"isBs4\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return !isBs3();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (_this.singleSlideOffset) {\r\n                _this.indicatorsByChunk = false;\r\n            }\r\n            if (_this.multilist) {\r\n                _this._chunkedSlides = chunkByNumber(_this.mapSlidesAndIndexes(), _this.itemsPerSlide);\r\n                _this.selectInitialSlides();\r\n            }\r\n        }), 0);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.destroyed = true;\r\n    };\r\n    /**\r\n     * Adds new slide. If this slide is first in collection - set it as active\r\n     * and starts auto changing\r\n     * @param slide\r\n     */\r\n    /**\r\n     * Adds new slide. If this slide is first in collection - set it as active\r\n     * and starts auto changing\r\n     * @param {?} slide\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.addSlide = /**\r\n     * Adds new slide. If this slide is first in collection - set it as active\r\n     * and starts auto changing\r\n     * @param {?} slide\r\n     * @return {?}\r\n     */\r\n    function (slide) {\r\n        this._slides.add(slide);\r\n        if (this.multilist && this._slides.length <= this.itemsPerSlide) {\r\n            slide.active = true;\r\n        }\r\n        if (!this.multilist && this._slides.length === 1) {\r\n            this._currentActiveSlide = undefined;\r\n            this.activeSlide = 0;\r\n            this.play();\r\n        }\r\n        if (this.multilist && this._slides.length > this.itemsPerSlide) {\r\n            this.play();\r\n        }\r\n    };\r\n    /**\r\n     * Removes specified slide. If this slide is active - will roll to another\r\n     * slide\r\n     * @param slide\r\n     */\r\n    /**\r\n     * Removes specified slide. If this slide is active - will roll to another\r\n     * slide\r\n     * @param {?} slide\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.removeSlide = /**\r\n     * Removes specified slide. If this slide is active - will roll to another\r\n     * slide\r\n     * @param {?} slide\r\n     * @return {?}\r\n     */\r\n    function (slide) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var remIndex = this._slides.indexOf(slide);\r\n        if (this._currentActiveSlide === remIndex) {\r\n            // removing of active slide\r\n            /** @type {?} */\r\n            var nextSlideIndex_1 = void 0;\r\n            if (this._slides.length > 1) {\r\n                // if this slide last - will roll to first slide, if noWrap flag is\r\n                // FALSE or to previous, if noWrap is TRUE in case, if this slide in\r\n                // middle of collection, index of next slide is same to removed\r\n                nextSlideIndex_1 = !this.isLast(remIndex)\r\n                    ? remIndex\r\n                    : this.noWrap ? remIndex - 1 : 0;\r\n            }\r\n            this._slides.remove(remIndex);\r\n            // prevents exception with changing some value after checking\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                _this._select(nextSlideIndex_1);\r\n            }), 0);\r\n        }\r\n        else {\r\n            this._slides.remove(remIndex);\r\n            /** @type {?} */\r\n            var currentSlideIndex_1 = this.getCurrentSlideIndex();\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                // after removing, need to actualize index of current active slide\r\n                _this._currentActiveSlide = currentSlideIndex_1;\r\n                _this.activeSlideChange.emit(_this._currentActiveSlide);\r\n            }), 0);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.nextSlideFromInterval = /**\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    function (force) {\r\n        if (force === void 0) { force = false; }\r\n        this.move(Direction.NEXT, force);\r\n    };\r\n    /**\r\n     * Rolling to next slide\r\n     * @param force: {boolean} if true - will ignore noWrap flag\r\n     */\r\n    /**\r\n     * Rolling to next slide\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.nextSlide = /**\r\n     * Rolling to next slide\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    function (force) {\r\n        if (force === void 0) { force = false; }\r\n        if (this.isPlaying) {\r\n            this.restartTimer();\r\n        }\r\n        this.move(Direction.NEXT, force);\r\n    };\r\n    /**\r\n     * Rolling to previous slide\r\n     * @param force: {boolean} if true - will ignore noWrap flag\r\n     */\r\n    /**\r\n     * Rolling to previous slide\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.previousSlide = /**\r\n     * Rolling to previous slide\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    function (force) {\r\n        if (force === void 0) { force = false; }\r\n        if (this.isPlaying) {\r\n            this.restartTimer();\r\n        }\r\n        this.move(Direction.PREV, force);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.getFirstVisibleIndex = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.slides.findIndex(this.getActive);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.getLastVisibleIndex = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return findLastIndex(this.slides, this.getActive);\r\n    };\r\n    /**\r\n     * @param {?} direction\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.move = /**\r\n     * @param {?} direction\r\n     * @param {?=} force\r\n     * @return {?}\r\n     */\r\n    function (direction, force) {\r\n        if (force === void 0) { force = false; }\r\n        /** @type {?} */\r\n        var firstVisibleIndex = this.getFirstVisibleIndex();\r\n        /** @type {?} */\r\n        var lastVisibleIndex = this.getLastVisibleIndex();\r\n        if (this.noWrap) {\r\n            if (direction === Direction.NEXT &&\r\n                this.isLast(lastVisibleIndex) ||\r\n                direction === Direction.PREV &&\r\n                    firstVisibleIndex === 0) {\r\n                return;\r\n            }\r\n        }\r\n        if (!this.multilist) {\r\n            this.activeSlide = this.findNextSlideIndex(direction, force);\r\n        }\r\n        else {\r\n            this.moveMultilist(direction);\r\n        }\r\n    };\r\n    /**\r\n     * Swith slides by enter, space and arrows keys\r\n     * @internal\r\n     */\r\n    /**\r\n     * Swith slides by enter, space and arrows keys\r\n     * \\@internal\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.keydownPress = /**\r\n     * Swith slides by enter, space and arrows keys\r\n     * \\@internal\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        // tslint:disable-next-line:deprecation\r\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\r\n            this.nextSlide();\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:deprecation\r\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\r\n            this.previousSlide();\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:deprecation\r\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\r\n            this.nextSlide();\r\n            return;\r\n        }\r\n    };\r\n    /**\r\n     * Play on mouse leave\r\n     * @internal\r\n     */\r\n    /**\r\n     * Play on mouse leave\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.onMouseLeave = /**\r\n     * Play on mouse leave\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.pauseOnFocus) {\r\n            this.play();\r\n        }\r\n    };\r\n    /**\r\n     * Play on mouse up\r\n     * @internal\r\n     */\r\n    /**\r\n     * Play on mouse up\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.onMouseUp = /**\r\n     * Play on mouse up\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.pauseOnFocus) {\r\n            this.play();\r\n        }\r\n    };\r\n    /**\r\n     * When slides on focus autoplay is stopped(optional)\r\n     * @internal\r\n     */\r\n    /**\r\n     * When slides on focus autoplay is stopped(optional)\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.pauseFocusIn = /**\r\n     * When slides on focus autoplay is stopped(optional)\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.pauseOnFocus) {\r\n            this.isPlaying = false;\r\n            this.resetTimer();\r\n        }\r\n    };\r\n    /**\r\n     * When slides out of focus autoplay is started\r\n     * @internal\r\n     */\r\n    /**\r\n     * When slides out of focus autoplay is started\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.pauseFocusOut = /**\r\n     * When slides out of focus autoplay is started\r\n     * \\@internal\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.play();\r\n    };\r\n    /**\r\n     * Rolling to specified slide\r\n     * @param index: {number} index of slide, which must be shown\r\n     */\r\n    /**\r\n     * Rolling to specified slide\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.selectSlide = /**\r\n     * Rolling to specified slide\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        if (this.isPlaying) {\r\n            this.restartTimer();\r\n        }\r\n        if (!this.multilist) {\r\n            this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\r\n        }\r\n        else {\r\n            this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\r\n        }\r\n    };\r\n    /**\r\n     * Starts a auto changing of slides\r\n     */\r\n    /**\r\n     * Starts a auto changing of slides\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.play = /**\r\n     * Starts a auto changing of slides\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.isPlaying) {\r\n            this.isPlaying = true;\r\n            this.restartTimer();\r\n        }\r\n    };\r\n    /**\r\n     * Stops a auto changing of slides\r\n     */\r\n    /**\r\n     * Stops a auto changing of slides\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.pause = /**\r\n     * Stops a auto changing of slides\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.noPause) {\r\n            this.isPlaying = false;\r\n            this.resetTimer();\r\n        }\r\n    };\r\n    /**\r\n     * Finds and returns index of currently displayed slide\r\n     */\r\n    /**\r\n     * Finds and returns index of currently displayed slide\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.getCurrentSlideIndex = /**\r\n     * Finds and returns index of currently displayed slide\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._slides.findIndex(this.getActive);\r\n    };\r\n    /**\r\n     * Defines, whether the specified index is last in collection\r\n     * @param index\r\n     */\r\n    /**\r\n     * Defines, whether the specified index is last in collection\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.isLast = /**\r\n     * Defines, whether the specified index is last in collection\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        return index + 1 >= this._slides.length;\r\n    };\r\n    /**\r\n     * Defines, whether the specified index is first in collection\r\n     * @param index\r\n     */\r\n    /**\r\n     * Defines, whether the specified index is first in collection\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.isFirst = /**\r\n     * Defines, whether the specified index is first in collection\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        return index === 0;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.indicatorsSlides = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.slides.filter((/**\r\n         * @param {?} slide\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        function (slide, index) { return !_this.indicatorsByChunk || index % _this.itemsPerSlide === 0; }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.selectInitialSlides = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var startIndex = this.startFromIndex <= this._slides.length\r\n            ? this.startFromIndex\r\n            : 0;\r\n        this.hideSlides();\r\n        if (this.singleSlideOffset) {\r\n            this._slidesWithIndexes = this.mapSlidesAndIndexes();\r\n            if (this._slides.length - startIndex < this.itemsPerSlide) {\r\n                /** @type {?} */\r\n                var slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\r\n                this._slidesWithIndexes = __spread(this._slidesWithIndexes, slidesToAppend).slice(slidesToAppend.length)\r\n                    .slice(0, this.itemsPerSlide);\r\n            }\r\n            else {\r\n                this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);\r\n            }\r\n            this._slidesWithIndexes.forEach((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.item.active = true; }));\r\n            this.makeSlidesConsistent(this._slidesWithIndexes);\r\n        }\r\n        else {\r\n            this.selectRangeByNestedIndex(startIndex);\r\n        }\r\n        this.slideRangeChange.emit(this.getVisibleIndexes());\r\n    };\r\n    /**\r\n     * Defines next slide index, depending of direction\r\n     * @param direction: Direction(UNKNOWN|PREV|NEXT)\r\n     * @param force: {boolean} if TRUE - will ignore noWrap flag, else will\r\n     *   return undefined if next slide require wrapping\r\n     */\r\n    /**\r\n     * Defines next slide index, depending of direction\r\n     * @private\r\n     * @param {?} direction\r\n     * @param {?} force\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.findNextSlideIndex = /**\r\n     * Defines next slide index, depending of direction\r\n     * @private\r\n     * @param {?} direction\r\n     * @param {?} force\r\n     * @return {?}\r\n     */\r\n    function (direction, force) {\r\n        /** @type {?} */\r\n        var nextSlideIndex = 0;\r\n        if (!force &&\r\n            (this.isLast(this.activeSlide) &&\r\n                direction !== Direction.PREV &&\r\n                this.noWrap)) {\r\n            return undefined;\r\n        }\r\n        switch (direction) {\r\n            case Direction.NEXT:\r\n                // if this is last slide, not force, looping is disabled\r\n                // and need to going forward - select current slide, as a next\r\n                nextSlideIndex = !this.isLast(this._currentActiveSlide)\r\n                    ? this._currentActiveSlide + 1\r\n                    : !force && this.noWrap ? this._currentActiveSlide : 0;\r\n                break;\r\n            case Direction.PREV:\r\n                // if this is first slide, not force, looping is disabled\r\n                // and need to going backward - select current slide, as a next\r\n                nextSlideIndex =\r\n                    this._currentActiveSlide > 0\r\n                        ? this._currentActiveSlide - 1\r\n                        : !force && this.noWrap\r\n                            ? this._currentActiveSlide\r\n                            : this._slides.length - 1;\r\n                break;\r\n            default:\r\n                throw new Error('Unknown direction');\r\n        }\r\n        return nextSlideIndex;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.mapSlidesAndIndexes = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.slides\r\n            .slice()\r\n            .map((/**\r\n         * @param {?} slide\r\n         * @param {?} index\r\n         * @return {?}\r\n         */\r\n        function (slide, index) {\r\n            return {\r\n                index: index,\r\n                item: slide\r\n            };\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.selectSlideRange = /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        if (this.isIndexInRange(index)) {\r\n            return;\r\n        }\r\n        this.hideSlides();\r\n        if (!this.singleSlideOffset) {\r\n            this.selectRangeByNestedIndex(index);\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var startIndex = this.isIndexOnTheEdges(index)\r\n                ? index\r\n                : index - this.itemsPerSlide + 1;\r\n            /** @type {?} */\r\n            var endIndex = this.isIndexOnTheEdges(index)\r\n                ? index + this.itemsPerSlide\r\n                : index + 1;\r\n            this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\r\n            this.makeSlidesConsistent(this._slidesWithIndexes);\r\n            this._slidesWithIndexes.forEach((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.item.active = true; }));\r\n        }\r\n        this.slideRangeChange.emit(this.getVisibleIndexes());\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.selectRangeByNestedIndex = /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        /** @type {?} */\r\n        var selectedRange = this._chunkedSlides\r\n            .map((/**\r\n         * @param {?} slidesList\r\n         * @param {?} i\r\n         * @return {?}\r\n         */\r\n        function (slidesList, i) {\r\n            return {\r\n                index: i,\r\n                list: slidesList\r\n            };\r\n        }))\r\n            .find((/**\r\n         * @param {?} slidesList\r\n         * @return {?}\r\n         */\r\n        function (slidesList) {\r\n            return slidesList.list.find((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.index === index; })) !== undefined;\r\n        }));\r\n        this._currentVisibleSlidesIndex = selectedRange.index;\r\n        this._chunkedSlides[selectedRange.index].forEach((/**\r\n         * @param {?} slide\r\n         * @return {?}\r\n         */\r\n        function (slide) {\r\n            slide.item.active = true;\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.isIndexOnTheEdges = /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        return (index + 1 - this.itemsPerSlide <= 0 ||\r\n            index + this.itemsPerSlide <= this._slides.length);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.isIndexInRange = /**\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        if (this.singleSlideOffset) {\r\n            /** @type {?} */\r\n            var visibleIndexes = this._slidesWithIndexes.map((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.index; }));\r\n            return visibleIndexes.indexOf(index) >= 0;\r\n        }\r\n        return (index <= this.getLastVisibleIndex() &&\r\n            index >= this.getFirstVisibleIndex());\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.hideSlides = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.slides.forEach((/**\r\n         * @param {?} slide\r\n         * @return {?}\r\n         */\r\n        function (slide) { return slide.active = false; }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.isVisibleSlideListLast = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.isVisibleSlideListFirst = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._currentVisibleSlidesIndex === 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} direction\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.moveSliderByOneItem = /**\r\n     * @private\r\n     * @param {?} direction\r\n     * @return {?}\r\n     */\r\n    function (direction) {\r\n        /** @type {?} */\r\n        var firstVisibleIndex;\r\n        /** @type {?} */\r\n        var lastVisibleIndex;\r\n        /** @type {?} */\r\n        var indexToHide;\r\n        /** @type {?} */\r\n        var indexToShow;\r\n        if (this.noWrap) {\r\n            firstVisibleIndex = this.getFirstVisibleIndex();\r\n            lastVisibleIndex = this.getLastVisibleIndex();\r\n            indexToHide = direction === Direction.NEXT\r\n                ? firstVisibleIndex\r\n                : lastVisibleIndex;\r\n            indexToShow = direction !== Direction.NEXT\r\n                ? firstVisibleIndex - 1\r\n                : !this.isLast(lastVisibleIndex)\r\n                    ? lastVisibleIndex + 1 : 0;\r\n            this._slides.get(indexToHide).active = false;\r\n            this._slides.get(indexToShow).active = true;\r\n            /** @type {?} */\r\n            var slidesToReorder = this.mapSlidesAndIndexes().filter((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.item.active; }));\r\n            this.makeSlidesConsistent(slidesToReorder);\r\n            this.slideRangeChange.emit(this.getVisibleIndexes());\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var displayedIndex = void 0;\r\n            firstVisibleIndex = this._slidesWithIndexes[0].index;\r\n            lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\r\n            if (direction === Direction.NEXT) {\r\n                this._slidesWithIndexes.shift();\r\n                displayedIndex = this.isLast(lastVisibleIndex)\r\n                    ? 0\r\n                    : lastVisibleIndex + 1;\r\n                this._slidesWithIndexes.push({\r\n                    index: displayedIndex,\r\n                    item: this._slides.get(displayedIndex)\r\n                });\r\n            }\r\n            else {\r\n                this._slidesWithIndexes.pop();\r\n                displayedIndex = this.isFirst(firstVisibleIndex)\r\n                    ? this._slides.length - 1\r\n                    : firstVisibleIndex - 1;\r\n                this._slidesWithIndexes = __spread([{\r\n                        index: displayedIndex,\r\n                        item: this._slides.get(displayedIndex)\r\n                    }], this._slidesWithIndexes);\r\n            }\r\n            this.hideSlides();\r\n            this._slidesWithIndexes.forEach((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.item.active = true; }));\r\n            this.makeSlidesConsistent(this._slidesWithIndexes);\r\n            this.slideRangeChange.emit(this._slidesWithIndexes.map((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.index; })));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} direction\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.moveMultilist = /**\r\n     * @private\r\n     * @param {?} direction\r\n     * @return {?}\r\n     */\r\n    function (direction) {\r\n        if (this.singleSlideOffset) {\r\n            this.moveSliderByOneItem(direction);\r\n        }\r\n        else {\r\n            this.hideSlides();\r\n            if (this.noWrap) {\r\n                this._currentVisibleSlidesIndex = direction === Direction.NEXT\r\n                    ? this._currentVisibleSlidesIndex + 1\r\n                    : this._currentVisibleSlidesIndex - 1;\r\n            }\r\n            else {\r\n                if (direction === Direction.NEXT) {\r\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListLast()\r\n                        ? 0\r\n                        : this._currentVisibleSlidesIndex + 1;\r\n                }\r\n                else {\r\n                    this._currentVisibleSlidesIndex = this.isVisibleSlideListFirst()\r\n                        ? this._chunkedSlides.length - 1\r\n                        : this._currentVisibleSlidesIndex - 1;\r\n                }\r\n            }\r\n            this._chunkedSlides[this._currentVisibleSlidesIndex].forEach((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.item.active = true; }));\r\n            this.slideRangeChange.emit(this.getVisibleIndexes());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.getVisibleIndexes = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.singleSlideOffset) {\r\n            return this._chunkedSlides[this._currentVisibleSlidesIndex]\r\n                .map((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.index; }));\r\n        }\r\n        else {\r\n            return this._slidesWithIndexes.map((/**\r\n             * @param {?} slide\r\n             * @return {?}\r\n             */\r\n            function (slide) { return slide.index; }));\r\n        }\r\n    };\r\n    /**\r\n     * Sets a slide, which specified through index, as active\r\n     * @param index\r\n     */\r\n    /**\r\n     * Sets a slide, which specified through index, as active\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype._select = /**\r\n     * Sets a slide, which specified through index, as active\r\n     * @private\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    function (index) {\r\n        if (isNaN(index)) {\r\n            this.pause();\r\n            return;\r\n        }\r\n        if (!this.multilist) {\r\n            /** @type {?} */\r\n            var currentSlide = this._slides.get(this._currentActiveSlide);\r\n            if (currentSlide) {\r\n                currentSlide.active = false;\r\n            }\r\n        }\r\n        /** @type {?} */\r\n        var nextSlide = this._slides.get(index);\r\n        if (nextSlide) {\r\n            this._currentActiveSlide = index;\r\n            nextSlide.active = true;\r\n            this.activeSlide = index;\r\n            this.activeSlideChange.emit(index);\r\n        }\r\n    };\r\n    /**\r\n     * Starts loop of auto changing of slides\r\n     */\r\n    /**\r\n     * Starts loop of auto changing of slides\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.restartTimer = /**\r\n     * Starts loop of auto changing of slides\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.resetTimer();\r\n        /** @type {?} */\r\n        var interval = +this.interval;\r\n        if (!isNaN(interval) && interval > 0) {\r\n            this.currentInterval = this.ngZone.runOutsideAngular((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return setInterval((/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    /** @type {?} */\r\n                    var nInterval = +_this.interval;\r\n                    _this.ngZone.run((/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        if (_this.isPlaying &&\r\n                            !isNaN(_this.interval) &&\r\n                            nInterval > 0 &&\r\n                            _this.slides.length) {\r\n                            _this.nextSlideFromInterval();\r\n                        }\r\n                        else {\r\n                            _this.pause();\r\n                        }\r\n                    }));\r\n                }), interval);\r\n            }));\r\n        }\r\n    };\r\n    Object.defineProperty(CarouselComponent.prototype, \"multilist\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.itemsPerSlide > 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Stops loop of auto changing of slides\r\n     */\r\n    /**\r\n     * Stops loop of auto changing of slides\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    CarouselComponent.prototype.resetTimer = /**\r\n     * Stops loop of auto changing of slides\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.currentInterval) {\r\n            clearInterval(this.currentInterval);\r\n            this.currentInterval = void 0;\r\n        }\r\n    };\r\n    CarouselComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'carousel',\r\n                    template: \"<div (mouseenter)=\\\"pause()\\\" (mouseleave)=\\\"onMouseLeave()\\\" (mouseup)=\\\"onMouseUp()\\\" class=\\\"carousel slide\\\" (keydown)=\\\"keydownPress($event)\\\" (focusin)=\\\"pauseFocusIn()\\\" (focusout)=\\\"pauseFocusOut()\\\" tabindex=\\\"0\\\">\\n  <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showIndicators && slides.length > 1\\\">\\n    <li *ngFor=\\\"let slidez of indicatorsSlides(); let i = index;\\\" [class.active]=\\\"slidez.active === true\\\" (click)=\\\"selectSlide(i)\\\"></li>\\n  </ol>\\n  <div class=\\\"carousel-inner\\\" [ngStyle]=\\\"{'display': multilist ? 'flex' : 'block'}\\\"><ng-content></ng-content></div>\\n  <a class=\\\"left carousel-control carousel-control-prev\\\" [class.disabled]=\\\"activeSlide === 0 && noWrap\\\" (click)=\\\"previousSlide()\\\" *ngIf=\\\"slides.length > 1\\\"\\n      tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-prev carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span *ngIf=\\\"isBs4\\\" class=\\\"sr-only\\\">Previous</span>\\n  </a>\\n  <a class=\\\"right carousel-control carousel-control-next\\\" (click)=\\\"nextSlide()\\\" [class.disabled]=\\\"isLast(activeSlide) && noWrap\\\" *ngIf=\\\"slides.length > 1\\\"\\n     tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span class=\\\"icon-next carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n    <span class=\\\"sr-only\\\">Next</span>\\n  </a>\\n</div>\\n\"\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    CarouselComponent.ctorParameters = function () { return [\r\n        { type: CarouselConfig },\r\n        { type: NgZone }\r\n    ]; };\r\n    CarouselComponent.propDecorators = {\r\n        noWrap: [{ type: Input }],\r\n        noPause: [{ type: Input }],\r\n        showIndicators: [{ type: Input }],\r\n        pauseOnFocus: [{ type: Input }],\r\n        indicatorsByChunk: [{ type: Input }],\r\n        itemsPerSlide: [{ type: Input }],\r\n        singleSlideOffset: [{ type: Input }],\r\n        activeSlideChange: [{ type: Output }],\r\n        slideRangeChange: [{ type: Output }],\r\n        activeSlide: [{ type: Input }],\r\n        startFromIndex: [{ type: Input }],\r\n        interval: [{ type: Input }]\r\n    };\r\n    return CarouselComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar SlideComponent = /** @class */ (function () {\r\n    function SlideComponent(carousel) {\r\n        this.itemWidth = '100%';\r\n        this.order = 0;\r\n        /**\r\n         * Wraps element by appropriate CSS classes\r\n         */\r\n        this.addClass = true;\r\n        this.carousel = carousel;\r\n    }\r\n    /** Fires changes in container collection after adding a new slide instance */\r\n    /**\r\n     * Fires changes in container collection after adding a new slide instance\r\n     * @return {?}\r\n     */\r\n    SlideComponent.prototype.ngOnInit = /**\r\n     * Fires changes in container collection after adding a new slide instance\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.carousel.addSlide(this);\r\n        this.itemWidth = 100 / this.carousel.itemsPerSlide + \"%\";\r\n    };\r\n    /** Fires changes in container collection after removing of this slide instance */\r\n    /**\r\n     * Fires changes in container collection after removing of this slide instance\r\n     * @return {?}\r\n     */\r\n    SlideComponent.prototype.ngOnDestroy = /**\r\n     * Fires changes in container collection after removing of this slide instance\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.carousel.removeSlide(this);\r\n    };\r\n    SlideComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'slide',\r\n                    template: \"\\n    <div [class.active]=\\\"active\\\" class=\\\"item\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\r\n                    host: {\r\n                        '[attr.aria-hidden]': '!active'\r\n                    }\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    SlideComponent.ctorParameters = function () { return [\r\n        { type: CarouselComponent }\r\n    ]; };\r\n    SlideComponent.propDecorators = {\r\n        active: [{ type: HostBinding, args: ['class.active',] }, { type: Input }],\r\n        itemWidth: [{ type: HostBinding, args: ['style.width',] }],\r\n        order: [{ type: HostBinding, args: ['style.order',] }],\r\n        addClass: [{ type: HostBinding, args: ['class.item',] }, { type: HostBinding, args: ['class.carousel-item',] }]\r\n    };\r\n    return SlideComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CarouselModule = /** @class */ (function () {\r\n    function CarouselModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CarouselModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return { ngModule: CarouselModule, providers: [] };\r\n    };\r\n    CarouselModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [SlideComponent, CarouselComponent],\r\n                    exports: [SlideComponent, CarouselComponent],\r\n                    providers: [CarouselConfig]\r\n                },] }\r\n    ];\r\n    return CarouselModule;\r\n}());\r\n\r\nexport { CarouselComponent, CarouselConfig, CarouselModule, SlideComponent };\r\n//# sourceMappingURL=ngx-bootstrap-carousel.js.map\r\n","import { style, animate, AnimationBuilder } from '@angular/animations';\r\nimport { Directive, ElementRef, Renderer2, Output, HostBinding, Input, EventEmitter, NgModule } from '@angular/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar COLLAPSE_ANIMATION_TIMING = '400ms cubic-bezier(0.4,0.0,0.2,1)';\r\n/** @type {?} */\r\nvar expandAnimation = [\r\n    style({ height: 0, visibility: 'hidden' }),\r\n    animate(COLLAPSE_ANIMATION_TIMING, style({ height: '*', visibility: 'visible' }))\r\n];\r\n/** @type {?} */\r\nvar collapseAnimation = [\r\n    style({ height: '*', visibility: 'visible' }),\r\n    animate(COLLAPSE_ANIMATION_TIMING, style({ height: 0, visibility: 'hidden' }))\r\n];\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CollapseDirective = /** @class */ (function () {\r\n    function CollapseDirective(_el, _renderer, _builder) {\r\n        this._el = _el;\r\n        this._renderer = _renderer;\r\n        /**\r\n         * This event fires as soon as content collapses\r\n         */\r\n        this.collapsed = new EventEmitter();\r\n        /**\r\n         * This event fires when collapsing is started\r\n         */\r\n        this.collapses = new EventEmitter();\r\n        /**\r\n         * This event fires as soon as content becomes visible\r\n         */\r\n        this.expanded = new EventEmitter();\r\n        /**\r\n         * This event fires when expansion is started\r\n         */\r\n        this.expands = new EventEmitter();\r\n        // shown\r\n        this.isExpanded = true;\r\n        // hidden\r\n        this.isCollapsed = false;\r\n        // stale state\r\n        this.isCollapse = true;\r\n        // animation state\r\n        this.isCollapsing = false;\r\n        /**\r\n         * turn on/off animation\r\n         */\r\n        this.isAnimated = false;\r\n        this._display = 'block';\r\n        this._stylesLoaded = false;\r\n        this._COLLAPSE_ACTION_NAME = 'collapse';\r\n        this._EXPAND_ACTION_NAME = 'expand';\r\n        this._factoryCollapseAnimation = _builder.build(collapseAnimation);\r\n        this._factoryExpandAnimation = _builder.build(expandAnimation);\r\n    }\r\n    Object.defineProperty(CollapseDirective.prototype, \"display\", {\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (!this.isAnimated) {\r\n                this._renderer.setStyle(this._el.nativeElement, 'display', value);\r\n                return;\r\n            }\r\n            this._display = value;\r\n            if (value === 'none') {\r\n                this.hide();\r\n                return;\r\n            }\r\n            this.show();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CollapseDirective.prototype, \"collapse\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.isExpanded;\r\n        },\r\n        /** A flag indicating visibility of content (shown or hidden) */\r\n        set: /**\r\n         * A flag indicating visibility of content (shown or hidden)\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (!this._player || this._isAnimationDone) {\r\n                this.isExpanded = value;\r\n                this.toggle();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CollapseDirective.prototype.ngAfterViewChecked = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._stylesLoaded = true;\r\n        if (!this._player || !this._isAnimationDone) {\r\n            return;\r\n        }\r\n        this._player.reset();\r\n        this._renderer.setStyle(this._el.nativeElement, 'height', '*');\r\n    };\r\n    /** allows to manually toggle content visibility */\r\n    /**\r\n     * allows to manually toggle content visibility\r\n     * @return {?}\r\n     */\r\n    CollapseDirective.prototype.toggle = /**\r\n     * allows to manually toggle content visibility\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isExpanded) {\r\n            this.hide();\r\n        }\r\n        else {\r\n            this.show();\r\n        }\r\n    };\r\n    /** allows to manually hide content */\r\n    /**\r\n     * allows to manually hide content\r\n     * @return {?}\r\n     */\r\n    CollapseDirective.prototype.hide = /**\r\n     * allows to manually hide content\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.isCollapsing = true;\r\n        this.isExpanded = false;\r\n        this.isCollapsed = true;\r\n        this.isCollapsing = false;\r\n        this.collapses.emit(this);\r\n        this._isAnimationDone = false;\r\n        this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this._isAnimationDone = true;\r\n            _this.collapsed.emit(_this);\r\n            _this._renderer.setStyle(_this._el.nativeElement, 'display', 'none');\r\n        }));\r\n    };\r\n    /** allows to manually show collapsed content */\r\n    /**\r\n     * allows to manually show collapsed content\r\n     * @return {?}\r\n     */\r\n    CollapseDirective.prototype.show = /**\r\n     * allows to manually show collapsed content\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._renderer.setStyle(this._el.nativeElement, 'display', this._display);\r\n        this.isCollapsing = true;\r\n        this.isExpanded = true;\r\n        this.isCollapsed = false;\r\n        this.isCollapsing = false;\r\n        this.expands.emit(this);\r\n        this._isAnimationDone = false;\r\n        this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this._isAnimationDone = true;\r\n            _this.expanded.emit(_this);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} isAnimated\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    CollapseDirective.prototype.animationRun = /**\r\n     * @param {?} isAnimated\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    function (isAnimated, action) {\r\n        var _this = this;\r\n        if (!isAnimated || !this._stylesLoaded) {\r\n            return (/**\r\n             * @param {?} callback\r\n             * @return {?}\r\n             */\r\n            function (callback) { return callback(); });\r\n        }\r\n        this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\r\n        this._renderer.addClass(this._el.nativeElement, 'collapse');\r\n        /** @type {?} */\r\n        var factoryAnimation = (action === this._EXPAND_ACTION_NAME)\r\n            ? this._factoryExpandAnimation\r\n            : this._factoryCollapseAnimation;\r\n        if (this._player) {\r\n            this._player.destroy();\r\n        }\r\n        this._player = factoryAnimation.create(this._el.nativeElement);\r\n        this._player.play();\r\n        return (/**\r\n         * @param {?} callback\r\n         * @return {?}\r\n         */\r\n        function (callback) { return _this._player.onDone(callback); });\r\n    };\r\n    CollapseDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[collapse]',\r\n                    exportAs: 'bs-collapse',\r\n                    host: {\r\n                        '[class.collapse]': 'true'\r\n                    }\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    CollapseDirective.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: Renderer2 },\r\n        { type: AnimationBuilder }\r\n    ]; };\r\n    CollapseDirective.propDecorators = {\r\n        collapsed: [{ type: Output }],\r\n        collapses: [{ type: Output }],\r\n        expanded: [{ type: Output }],\r\n        expands: [{ type: Output }],\r\n        isExpanded: [{ type: HostBinding, args: ['class.in',] }, { type: HostBinding, args: ['class.show',] }, { type: HostBinding, args: ['attr.aria-expanded',] }],\r\n        isCollapsed: [{ type: HostBinding, args: ['attr.aria-hidden',] }],\r\n        isCollapse: [{ type: HostBinding, args: ['class.collapse',] }],\r\n        isCollapsing: [{ type: HostBinding, args: ['class.collapsing',] }],\r\n        display: [{ type: Input }],\r\n        isAnimated: [{ type: Input }],\r\n        collapse: [{ type: Input }]\r\n    };\r\n    return CollapseDirective;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar CollapseModule = /** @class */ (function () {\r\n    function CollapseModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    CollapseModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return { ngModule: CollapseModule, providers: [] };\r\n    };\r\n    CollapseModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [CollapseDirective],\r\n                    exports: [CollapseDirective]\r\n                },] }\r\n    ];\r\n    return CollapseModule;\r\n}());\r\n\r\nexport { CollapseDirective, CollapseModule };\r\n//# sourceMappingURL=ngx-bootstrap-collapse.js.map\r\n","import { Injectable, forwardRef, Component, ElementRef, ChangeDetectorRef, Input, Output, EventEmitter, NgModule } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Provides default values for Pagination and pager components\r\n */\r\nvar PaginationConfig = /** @class */ (function () {\r\n    function PaginationConfig() {\r\n        this.main = {\r\n            maxSize: void 0,\r\n            itemsPerPage: 10,\r\n            boundaryLinks: false,\r\n            directionLinks: true,\r\n            firstText: 'First',\r\n            previousText: 'Previous',\r\n            nextText: 'Next',\r\n            lastText: 'Last',\r\n            pageBtnClass: '',\r\n            rotate: true\r\n        };\r\n        this.pager = {\r\n            itemsPerPage: 15,\r\n            previousText: '« Previous',\r\n            nextText: 'Next »',\r\n            pageBtnClass: '',\r\n            align: true\r\n        };\r\n    }\r\n    PaginationConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return PaginationConfig;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar PAGER_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    /* tslint:disable-next-line: no-use-before-declare */\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    function () { return PagerComponent; })),\r\n    multi: true\r\n};\r\nvar PagerComponent = /** @class */ (function () {\r\n    function PagerComponent(elementRef, paginationConfig, changeDetection) {\r\n        this.elementRef = elementRef;\r\n        this.changeDetection = changeDetection;\r\n        /**\r\n         * fired when total pages count changes, $event:number equals to total pages count\r\n         */\r\n        this.numPages = new EventEmitter();\r\n        /**\r\n         * fired when page was changed, $event:{page, itemsPerPage} equals to\r\n         * object with current page index and number of items per page\r\n         */\r\n        this.pageChanged = new EventEmitter();\r\n        this.onChange = Function.prototype;\r\n        this.onTouched = Function.prototype;\r\n        this.inited = false;\r\n        this._page = 1;\r\n        this.elementRef = elementRef;\r\n        if (!this.config) {\r\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\r\n        }\r\n    }\r\n    Object.defineProperty(PagerComponent.prototype, \"itemsPerPage\", {\r\n        /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n        get: /**\r\n         * maximum number of items per page. If value less than 1 will display all items on one page\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._itemsPerPage;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._itemsPerPage = v;\r\n            this.totalPages = this.calculateTotalPages();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PagerComponent.prototype, \"totalItems\", {\r\n        /** total number of items in all pages */\r\n        get: /**\r\n         * total number of items in all pages\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._totalItems;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._totalItems = v;\r\n            this.totalPages = this.calculateTotalPages();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PagerComponent.prototype, \"totalPages\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._totalPages;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._totalPages = v;\r\n            this.numPages.emit(v);\r\n            if (this.inited) {\r\n                this.selectPage(this.page);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PagerComponent.prototype, \"page\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._page;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            /** @type {?} */\r\n            var _previous = this._page;\r\n            this._page = value > this.totalPages ? this.totalPages : value || 1;\r\n            this.changeDetection.markForCheck();\r\n            if (_previous === this._page || typeof _previous === 'undefined') {\r\n                return;\r\n            }\r\n            this.pageChanged.emit({\r\n                page: this._page,\r\n                itemsPerPage: this.itemsPerPage\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.configureOptions = /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        this.config = Object.assign({}, config);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (typeof window !== 'undefined') {\r\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n        }\r\n        // watch for maxSize\r\n        this.maxSize =\r\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\r\n        this.rotate =\r\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\r\n        this.boundaryLinks =\r\n            typeof this.boundaryLinks !== 'undefined'\r\n                ? this.boundaryLinks\r\n                : this.config.boundaryLinks;\r\n        this.directionLinks =\r\n            typeof this.directionLinks !== 'undefined'\r\n                ? this.directionLinks\r\n                : this.config.directionLinks;\r\n        this.pageBtnClass =\r\n            typeof this.pageBtnClass !== 'undefined'\r\n                ? this.pageBtnClass\r\n                : this.config.pageBtnClass;\r\n        // base class\r\n        this.itemsPerPage =\r\n            typeof this.itemsPerPage !== 'undefined'\r\n                ? this.itemsPerPage\r\n                : this.config.itemsPerPage;\r\n        this.totalPages = this.calculateTotalPages();\r\n        // this class\r\n        this.pages = this.getPages(this.page, this.totalPages);\r\n        this.inited = true;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.writeValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.page = value;\r\n        this.pages = this.getPages(this.page, this.totalPages);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.getText = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        // tslint:disable-next-line:no-any\r\n        return ((/** @type {?} */ (this)))[key + \"Text\"] || ((/** @type {?} */ (this))).config[key + \"Text\"];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.noPrevious = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.page === 1;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.noNext = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.page === this.totalPages;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.registerOnChange = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.registerOnTouched = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n     * @param {?} page\r\n     * @param {?=} event\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.selectPage = /**\r\n     * @param {?} page\r\n     * @param {?=} event\r\n     * @return {?}\r\n     */\r\n    function (page, event) {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        if (!this.disabled) {\r\n            if (event && event.target) {\r\n                // tslint:disable-next-line:no-any\r\n                /** @type {?} */\r\n                var target = event.target;\r\n                target.blur();\r\n            }\r\n            this.writeValue(page);\r\n            this.onChange(this.page);\r\n        }\r\n    };\r\n    // Create page object used in template\r\n    // Create page object used in template\r\n    /**\r\n     * @protected\r\n     * @param {?} num\r\n     * @param {?} text\r\n     * @param {?} active\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.makePage = \r\n    // Create page object used in template\r\n    /**\r\n     * @protected\r\n     * @param {?} num\r\n     * @param {?} text\r\n     * @param {?} active\r\n     * @return {?}\r\n     */\r\n    function (num, text, active) {\r\n        return { text: text, number: num, active: active };\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} currentPage\r\n     * @param {?} totalPages\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.getPages = /**\r\n     * @protected\r\n     * @param {?} currentPage\r\n     * @param {?} totalPages\r\n     * @return {?}\r\n     */\r\n    function (currentPage, totalPages) {\r\n        /** @type {?} */\r\n        var pages = [];\r\n        // Default page limits\r\n        /** @type {?} */\r\n        var startPage = 1;\r\n        /** @type {?} */\r\n        var endPage = totalPages;\r\n        /** @type {?} */\r\n        var isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n        // recompute if maxSize\r\n        if (isMaxSized) {\r\n            if (this.rotate) {\r\n                // Current page is displayed in the middle of the visible ones\r\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n                endPage = startPage + this.maxSize - 1;\r\n                // Adjust if limit is exceeded\r\n                if (endPage > totalPages) {\r\n                    endPage = totalPages;\r\n                    startPage = endPage - this.maxSize + 1;\r\n                }\r\n            }\r\n            else {\r\n                // Visible pages are paginated with maxSize\r\n                startPage =\r\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\r\n                // Adjust last page if limit is exceeded\r\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n            }\r\n        }\r\n        // Add page number links\r\n        for (var num = startPage; num <= endPage; num++) {\r\n            /** @type {?} */\r\n            var page = this.makePage(num, num.toString(), num === currentPage);\r\n            pages.push(page);\r\n        }\r\n        // Add links to move between page sets\r\n        if (isMaxSized && !this.rotate) {\r\n            if (startPage > 1) {\r\n                /** @type {?} */\r\n                var previousPageSet = this.makePage(startPage - 1, '...', false);\r\n                pages.unshift(previousPageSet);\r\n            }\r\n            if (endPage < totalPages) {\r\n                /** @type {?} */\r\n                var nextPageSet = this.makePage(endPage + 1, '...', false);\r\n                pages.push(nextPageSet);\r\n            }\r\n        }\r\n        return pages;\r\n    };\r\n    // base class\r\n    // base class\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    PagerComponent.prototype.calculateTotalPages = \r\n    // base class\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var totalPages = this.itemsPerPage < 1\r\n            ? 1\r\n            : Math.ceil(this.totalItems / this.itemsPerPage);\r\n        return Math.max(totalPages || 0, 1);\r\n    };\r\n    PagerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'pager',\r\n                    template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\",\r\n                    providers: [PAGER_CONTROL_VALUE_ACCESSOR]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    PagerComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: PaginationConfig },\r\n        { type: ChangeDetectorRef }\r\n    ]; };\r\n    PagerComponent.propDecorators = {\r\n        align: [{ type: Input }],\r\n        maxSize: [{ type: Input }],\r\n        boundaryLinks: [{ type: Input }],\r\n        directionLinks: [{ type: Input }],\r\n        firstText: [{ type: Input }],\r\n        previousText: [{ type: Input }],\r\n        nextText: [{ type: Input }],\r\n        lastText: [{ type: Input }],\r\n        rotate: [{ type: Input }],\r\n        pageBtnClass: [{ type: Input }],\r\n        disabled: [{ type: Input }],\r\n        numPages: [{ type: Output }],\r\n        pageChanged: [{ type: Output }],\r\n        itemsPerPage: [{ type: Input }],\r\n        totalItems: [{ type: Input }]\r\n    };\r\n    return PagerComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar PAGINATION_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    /* tslint:disable-next-line: no-use-before-declare */\r\n    useExisting: forwardRef((/**\r\n     * @return {?}\r\n     */\r\n    function () { return PaginationComponent; })),\r\n    multi: true\r\n};\r\nvar PaginationComponent = /** @class */ (function () {\r\n    function PaginationComponent(elementRef, paginationConfig, changeDetection) {\r\n        this.elementRef = elementRef;\r\n        this.changeDetection = changeDetection;\r\n        /**\r\n         * fired when total pages count changes, $event:number equals to total pages count\r\n         */\r\n        this.numPages = new EventEmitter();\r\n        /**\r\n         * fired when page was changed, $event:{page, itemsPerPage} equals to object\r\n         * with current page index and number of items per page\r\n         */\r\n        this.pageChanged = new EventEmitter();\r\n        this.onChange = Function.prototype;\r\n        this.onTouched = Function.prototype;\r\n        this.inited = false;\r\n        this._page = 1;\r\n        this.elementRef = elementRef;\r\n        if (!this.config) {\r\n            this.configureOptions(paginationConfig.main);\r\n        }\r\n    }\r\n    Object.defineProperty(PaginationComponent.prototype, \"itemsPerPage\", {\r\n        /** maximum number of items per page. If value less than 1 will display all items on one page */\r\n        get: /**\r\n         * maximum number of items per page. If value less than 1 will display all items on one page\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._itemsPerPage;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._itemsPerPage = v;\r\n            this.totalPages = this.calculateTotalPages();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationComponent.prototype, \"totalItems\", {\r\n        /** total number of items in all pages */\r\n        get: /**\r\n         * total number of items in all pages\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._totalItems;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._totalItems = v;\r\n            this.totalPages = this.calculateTotalPages();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationComponent.prototype, \"totalPages\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._totalPages;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._totalPages = v;\r\n            this.numPages.emit(v);\r\n            if (this.inited) {\r\n                this.selectPage(this.page);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationComponent.prototype, \"page\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._page;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            /** @type {?} */\r\n            var _previous = this._page;\r\n            this._page = value > this.totalPages ? this.totalPages : value || 1;\r\n            this.changeDetection.markForCheck();\r\n            if (_previous === this._page || typeof _previous === 'undefined') {\r\n                return;\r\n            }\r\n            this.pageChanged.emit({\r\n                page: this._page,\r\n                itemsPerPage: this.itemsPerPage\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.configureOptions = /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        this.config = Object.assign({}, config);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (typeof window !== 'undefined') {\r\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\r\n        }\r\n        // watch for maxSize\r\n        this.maxSize =\r\n            typeof this.maxSize !== 'undefined' ? this.maxSize : this.config.maxSize;\r\n        this.rotate =\r\n            typeof this.rotate !== 'undefined' ? this.rotate : this.config.rotate;\r\n        this.boundaryLinks =\r\n            typeof this.boundaryLinks !== 'undefined'\r\n                ? this.boundaryLinks\r\n                : this.config.boundaryLinks;\r\n        this.directionLinks =\r\n            typeof this.directionLinks !== 'undefined'\r\n                ? this.directionLinks\r\n                : this.config.directionLinks;\r\n        this.pageBtnClass =\r\n            typeof this.pageBtnClass !== 'undefined'\r\n                ? this.pageBtnClass\r\n                : this.config.pageBtnClass;\r\n        // base class\r\n        this.itemsPerPage =\r\n            typeof this.itemsPerPage !== 'undefined'\r\n                ? this.itemsPerPage\r\n                : this.config.itemsPerPage;\r\n        this.totalPages = this.calculateTotalPages();\r\n        // this class\r\n        this.pages = this.getPages(this.page, this.totalPages);\r\n        this.inited = true;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.writeValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        this.page = value;\r\n        this.pages = this.getPages(this.page, this.totalPages);\r\n    };\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.getText = /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    function (key) {\r\n        // tslint:disable-next-line:no-any\r\n        return ((/** @type {?} */ (this)))[key + \"Text\"] || ((/** @type {?} */ (this))).config[key + \"Text\"];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.noPrevious = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.page === 1;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.noNext = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.page === this.totalPages;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.registerOnChange = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.registerOnTouched = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n     * @param {?} page\r\n     * @param {?=} event\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.selectPage = /**\r\n     * @param {?} page\r\n     * @param {?=} event\r\n     * @return {?}\r\n     */\r\n    function (page, event) {\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n        if (!this.disabled) {\r\n            if (event && event.target) {\r\n                // tslint:disable-next-line:no-any\r\n                /** @type {?} */\r\n                var target = event.target;\r\n                target.blur();\r\n            }\r\n            this.writeValue(page);\r\n            this.onChange(this.page);\r\n        }\r\n    };\r\n    // Create page object used in template\r\n    // Create page object used in template\r\n    /**\r\n     * @protected\r\n     * @param {?} num\r\n     * @param {?} text\r\n     * @param {?} active\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.makePage = \r\n    // Create page object used in template\r\n    /**\r\n     * @protected\r\n     * @param {?} num\r\n     * @param {?} text\r\n     * @param {?} active\r\n     * @return {?}\r\n     */\r\n    function (num, text, active) {\r\n        return { text: text, number: num, active: active };\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} currentPage\r\n     * @param {?} totalPages\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.getPages = /**\r\n     * @protected\r\n     * @param {?} currentPage\r\n     * @param {?} totalPages\r\n     * @return {?}\r\n     */\r\n    function (currentPage, totalPages) {\r\n        /** @type {?} */\r\n        var pages = [];\r\n        // Default page limits\r\n        /** @type {?} */\r\n        var startPage = 1;\r\n        /** @type {?} */\r\n        var endPage = totalPages;\r\n        /** @type {?} */\r\n        var isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\r\n        // recompute if maxSize\r\n        if (isMaxSized) {\r\n            if (this.rotate) {\r\n                // Current page is displayed in the middle of the visible ones\r\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\r\n                endPage = startPage + this.maxSize - 1;\r\n                // Adjust if limit is exceeded\r\n                if (endPage > totalPages) {\r\n                    endPage = totalPages;\r\n                    startPage = endPage - this.maxSize + 1;\r\n                }\r\n            }\r\n            else {\r\n                // Visible pages are paginated with maxSize\r\n                startPage =\r\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\r\n                // Adjust last page if limit is exceeded\r\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\r\n            }\r\n        }\r\n        // Add page number links\r\n        for (var num = startPage; num <= endPage; num++) {\r\n            /** @type {?} */\r\n            var page = this.makePage(num, num.toString(), num === currentPage);\r\n            pages.push(page);\r\n        }\r\n        // Add links to move between page sets\r\n        if (isMaxSized && !this.rotate) {\r\n            if (startPage > 1) {\r\n                /** @type {?} */\r\n                var previousPageSet = this.makePage(startPage - 1, '...', false);\r\n                pages.unshift(previousPageSet);\r\n            }\r\n            if (endPage < totalPages) {\r\n                /** @type {?} */\r\n                var nextPageSet = this.makePage(endPage + 1, '...', false);\r\n                pages.push(nextPageSet);\r\n            }\r\n        }\r\n        return pages;\r\n    };\r\n    // base class\r\n    // base class\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    PaginationComponent.prototype.calculateTotalPages = \r\n    // base class\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var totalPages = this.itemsPerPage < 1\r\n            ? 1\r\n            : Math.ceil(this.totalItems / this.itemsPerPage);\r\n        return Math.max(totalPages || 0, 1);\r\n    };\r\n    PaginationComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'pagination',\r\n                    template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious()||disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\"\\n       [innerHTML]=\\\"getText('first')\\\"></a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious()||disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\"\\n       [innerHTML]=\\\"getText('previous')\\\"></a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled&&!pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\"\\n       [innerHTML]=\\\"pg.text\\\"></a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext()||disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\"\\n       [innerHTML]=\\\"getText('next')\\\"></a></li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext()||disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\"\\n       [innerHTML]=\\\"getText('last')\\\"></a></li>\\n</ul>\\n\",\r\n                    providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: PaginationConfig },\r\n        { type: ChangeDetectorRef }\r\n    ]; };\r\n    PaginationComponent.propDecorators = {\r\n        align: [{ type: Input }],\r\n        maxSize: [{ type: Input }],\r\n        boundaryLinks: [{ type: Input }],\r\n        directionLinks: [{ type: Input }],\r\n        firstText: [{ type: Input }],\r\n        previousText: [{ type: Input }],\r\n        nextText: [{ type: Input }],\r\n        lastText: [{ type: Input }],\r\n        rotate: [{ type: Input }],\r\n        pageBtnClass: [{ type: Input }],\r\n        disabled: [{ type: Input }],\r\n        numPages: [{ type: Output }],\r\n        pageChanged: [{ type: Output }],\r\n        itemsPerPage: [{ type: Input }],\r\n        totalItems: [{ type: Input }]\r\n    };\r\n    return PaginationComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PaginationModule = /** @class */ (function () {\r\n    function PaginationModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PaginationModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return { ngModule: PaginationModule, providers: [PaginationConfig] };\r\n    };\r\n    PaginationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [PagerComponent, PaginationComponent],\r\n                    exports: [PagerComponent, PaginationComponent]\r\n                },] }\r\n    ];\r\n    return PaginationModule;\r\n}());\r\n\r\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule, PAGER_CONTROL_VALUE_ACCESSOR as ɵa, PAGINATION_CONTROL_VALUE_ACCESSOR as ɵb };\r\n//# sourceMappingURL=ngx-bootstrap-pagination.js.map\r\n","import { Injectable, Component, ChangeDetectionStrategy, Input, Directive, ElementRef, Renderer2, ViewContainerRef, Output, NgModule } from '@angular/core';\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Configuration service for the Popover directive.\r\n * You can inject this service, typically in your root component, and customize\r\n * the values of its properties in order to provide default values for all the\r\n * popovers used in the application.\r\n */\r\nvar PopoverConfig = /** @class */ (function () {\r\n    function PopoverConfig() {\r\n        /**\r\n         * sets disable adaptive position\r\n         */\r\n        this.adaptivePosition = true;\r\n        /**\r\n         * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\r\n         */\r\n        this.placement = 'top';\r\n        /**\r\n         * Specifies events that should trigger. Supports a space separated list of\r\n         * event names.\r\n         */\r\n        this.triggers = 'click';\r\n        this.outsideClick = false;\r\n    }\r\n    PopoverConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return PopoverConfig;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PopoverContainerComponent = /** @class */ (function () {\r\n    function PopoverContainerComponent(config) {\r\n        Object.assign(this, config);\r\n    }\r\n    Object.defineProperty(PopoverContainerComponent.prototype, \"isBs3\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return isBs3();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PopoverContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'popover-container',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    // tslint:disable-next-line\r\n                    host: {\r\n                        '[class]': '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\r\n                        '[class.show]': '!isBs3',\r\n                        '[class.bs3]': 'isBs3',\r\n                        role: 'tooltip',\r\n                        style: 'display:block;'\r\n                    },\r\n                    template: \"<div class=\\\"popover-arrow arrow\\\"></div>\\n<h3 class=\\\"popover-title popover-header\\\" *ngIf=\\\"title\\\">{{ title }}</h3>\\n<div class=\\\"popover-content popover-body\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\r\n                    styles: [\"\\n    :host.bs3.popover-top {\\n      margin-bottom: 10px;\\n    }\\n    :host.bs3.popover.top>.arrow {\\n      margin-left: -2px;\\n    }\\n    :host.bs3.popover.top {\\n      margin-bottom: 10px;\\n    }\\n    :host.popover.bottom>.arrow {\\n      margin-left: -4px;\\n    }\\n    :host.bs3.bs-popover-left {\\n      margin-right: .5rem;\\n    }\\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\\n      margin: .3rem 0;\\n    }\\n    \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    PopoverContainerComponent.ctorParameters = function () { return [\r\n        { type: PopoverConfig }\r\n    ]; };\r\n    PopoverContainerComponent.propDecorators = {\r\n        placement: [{ type: Input }],\r\n        title: [{ type: Input }]\r\n    };\r\n    return PopoverContainerComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\r\nvar PopoverDirective = /** @class */ (function () {\r\n    function PopoverDirective(_config, _elementRef, _renderer, _viewContainerRef, cis, _positionService) {\r\n        this._positionService = _positionService;\r\n        /**\r\n         * Close popover on outside click\r\n         */\r\n        this.outsideClick = false;\r\n        /**\r\n         * Css class for popover container\r\n         */\r\n        this.containerClass = '';\r\n        this._isInited = false;\r\n        this._popover = cis\r\n            .createLoader(_elementRef, _viewContainerRef, _renderer)\r\n            .provide({ provide: PopoverConfig, useValue: _config });\r\n        Object.assign(this, _config);\r\n        this.onShown = this._popover.onShown;\r\n        this.onHidden = this._popover.onHidden;\r\n        // fix: no focus on button on Mac OS #1795\r\n        if (typeof window !== 'undefined') {\r\n            _elementRef.nativeElement.addEventListener('click', (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                try {\r\n                    _elementRef.nativeElement.focus();\r\n                }\r\n                catch (err) {\r\n                    return;\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    Object.defineProperty(PopoverDirective.prototype, \"isOpen\", {\r\n        /**\r\n         * Returns whether or not the popover is currently being shown\r\n         */\r\n        get: /**\r\n         * Returns whether or not the popover is currently being shown\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._popover.isShown;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (value) {\r\n                this.show();\r\n            }\r\n            else {\r\n                this.hide();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Opens an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\r\n    /**\r\n     * Opens an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     * @return {?}\r\n     */\r\n    PopoverDirective.prototype.show = /**\r\n     * Opens an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._popover.isShown || !this.popover) {\r\n            return;\r\n        }\r\n        this._positionService.setOptions({\r\n            modifiers: {\r\n                flip: {\r\n                    enabled: this.adaptivePosition\r\n                },\r\n                preventOverflow: {\r\n                    enabled: this.adaptivePosition\r\n                }\r\n            }\r\n        });\r\n        this._popover\r\n            .attach(PopoverContainerComponent)\r\n            .to(this.container)\r\n            .position({ attachment: this.placement })\r\n            .show({\r\n            content: this.popover,\r\n            context: this.popoverContext,\r\n            placement: this.placement,\r\n            title: this.popoverTitle,\r\n            containerClass: this.containerClass\r\n        });\r\n        if (!this.adaptivePosition) {\r\n            this._positionService.calcPosition();\r\n            this._positionService.deletePositionElement(this._popover._componentRef.location);\r\n        }\r\n        this.isOpen = true;\r\n    };\r\n    /**\r\n     * Closes an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\r\n    /**\r\n     * Closes an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     * @return {?}\r\n     */\r\n    PopoverDirective.prototype.hide = /**\r\n     * Closes an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isOpen) {\r\n            this._popover.hide();\r\n            this.isOpen = false;\r\n        }\r\n    };\r\n    /**\r\n     * Toggles an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\r\n    /**\r\n     * Toggles an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     * @return {?}\r\n     */\r\n    PopoverDirective.prototype.toggle = /**\r\n     * Toggles an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isOpen) {\r\n            return this.hide();\r\n        }\r\n        this.show();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PopoverDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // fix: seems there are an issue with `routerLinkActive`\r\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\r\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\r\n        if (this._isInited) {\r\n            return;\r\n        }\r\n        this._isInited = true;\r\n        this._popover.listen({\r\n            triggers: this.triggers,\r\n            outsideClick: this.outsideClick,\r\n            show: (/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.show(); })\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PopoverDirective.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._popover.dispose();\r\n    };\r\n    PopoverDirective.decorators = [\r\n        { type: Directive, args: [{ selector: '[popover]', exportAs: 'bs-popover' },] }\r\n    ];\r\n    /** @nocollapse */\r\n    PopoverDirective.ctorParameters = function () { return [\r\n        { type: PopoverConfig },\r\n        { type: ElementRef },\r\n        { type: Renderer2 },\r\n        { type: ViewContainerRef },\r\n        { type: ComponentLoaderFactory },\r\n        { type: PositioningService }\r\n    ]; };\r\n    PopoverDirective.propDecorators = {\r\n        adaptivePosition: [{ type: Input }],\r\n        popover: [{ type: Input }],\r\n        popoverContext: [{ type: Input }],\r\n        popoverTitle: [{ type: Input }],\r\n        placement: [{ type: Input }],\r\n        outsideClick: [{ type: Input }],\r\n        triggers: [{ type: Input }],\r\n        container: [{ type: Input }],\r\n        containerClass: [{ type: Input }],\r\n        isOpen: [{ type: Input }],\r\n        onShown: [{ type: Output }],\r\n        onHidden: [{ type: Output }]\r\n    };\r\n    return PopoverDirective;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar PopoverModule = /** @class */ (function () {\r\n    function PopoverModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PopoverModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            ngModule: PopoverModule,\r\n            providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\r\n        };\r\n    };\r\n    PopoverModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [PopoverDirective, PopoverContainerComponent],\r\n                    exports: [PopoverDirective],\r\n                    entryComponents: [PopoverContainerComponent]\r\n                },] }\r\n    ];\r\n    return PopoverModule;\r\n}());\r\n\r\nexport { PopoverConfig, PopoverContainerComponent, PopoverDirective, PopoverModule };\r\n//# sourceMappingURL=ngx-bootstrap-popover.js.map\r\n","import { Injectable, Component, Input, HostBinding, ElementRef, Host, Renderer2, NgModule } from '@angular/core';\r\nimport { isBs3 } from 'ngx-bootstrap/utils';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ProgressbarConfig = /** @class */ (function () {\r\n    function ProgressbarConfig() {\r\n        /**\r\n         * if `true` changing value of progress bar will be animated\r\n         */\r\n        this.animate = false;\r\n        /**\r\n         * maximum total value of progress element\r\n         */\r\n        this.max = 100;\r\n    }\r\n    ProgressbarConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return ProgressbarConfig;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ProgressbarComponent = /** @class */ (function () {\r\n    function ProgressbarComponent(config) {\r\n        this.isStacked = false;\r\n        this.addClass = true;\r\n        /* tslint:disable-next-line:no-any */\r\n        this.bars = [];\r\n        this._max = 100;\r\n        Object.assign(this, config);\r\n    }\r\n    Object.defineProperty(ProgressbarComponent.prototype, \"animate\", {\r\n        /** if `true` changing value of progress bar will be animated */\r\n        set: /**\r\n         * if `true` changing value of progress bar will be animated\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._animate = value;\r\n            this.bars.forEach((/**\r\n             * @param {?} b\r\n             * @return {?}\r\n             */\r\n            function (b) {\r\n                b.animate = value;\r\n            }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProgressbarComponent.prototype, \"striped\", {\r\n        /** If `true`, striped classes are applied */\r\n        set: /**\r\n         * If `true`, striped classes are applied\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._striped = value;\r\n            this.bars.forEach((/**\r\n             * @param {?} b\r\n             * @return {?}\r\n             */\r\n            function (b) {\r\n                b.striped = value;\r\n            }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProgressbarComponent.prototype, \"value\", {\r\n        /** current value of progress bar. Could be a number or array of objects\r\n         * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\r\n         */\r\n        set: /**\r\n         * current value of progress bar. Could be a number or array of objects\r\n         * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.isStacked = Array.isArray(value);\r\n            this._value = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProgressbarComponent.prototype, \"isBs3\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return isBs3();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProgressbarComponent.prototype, \"max\", {\r\n        /** maximum total value of progress element */\r\n        get: /**\r\n         * maximum total value of progress element\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._max;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._max = v;\r\n            this.bars.forEach((/**\r\n             * @param {?} bar\r\n             * @return {?}\r\n             */\r\n            function (bar) {\r\n                bar.recalculatePercentage();\r\n            }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} bar\r\n     * @return {?}\r\n     */\r\n    ProgressbarComponent.prototype.addBar = /**\r\n     * @param {?} bar\r\n     * @return {?}\r\n     */\r\n    function (bar) {\r\n        bar.animate = this._animate;\r\n        bar.striped = this._striped;\r\n        this.bars.push(bar);\r\n    };\r\n    /**\r\n     * @param {?} bar\r\n     * @return {?}\r\n     */\r\n    ProgressbarComponent.prototype.removeBar = /**\r\n     * @param {?} bar\r\n     * @return {?}\r\n     */\r\n    function (bar) {\r\n        this.bars.splice(this.bars.indexOf(bar), 1);\r\n    };\r\n    ProgressbarComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'progressbar',\r\n                    template: \"<bar [type]=\\\"type\\\" [value]=\\\"_value\\\" *ngIf=\\\"!isStacked\\\">\\n  <ng-content></ng-content>\\n</bar>\\n<ng-template [ngIf]=\\\"isStacked\\\">\\n  <bar *ngFor=\\\"let item of _value\\\" [type]=\\\"item.type\\\" [value]=\\\"item.value\\\">{{ item.label }}</bar>\\n</ng-template>\\n\",\r\n                    styles: [\"\\n    :host {\\n      width: 100%;\\n      display: flex;\\n    }\\n  \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    ProgressbarComponent.ctorParameters = function () { return [\r\n        { type: ProgressbarConfig }\r\n    ]; };\r\n    ProgressbarComponent.propDecorators = {\r\n        animate: [{ type: Input }],\r\n        striped: [{ type: Input }],\r\n        type: [{ type: Input }],\r\n        value: [{ type: Input }],\r\n        max: [{ type: HostBinding, args: ['attr.max',] }, { type: Input }],\r\n        addClass: [{ type: HostBinding, args: ['class.progress',] }]\r\n    };\r\n    return ProgressbarComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// todo: number pipe\r\n// todo: use query from progress?\r\nvar BarComponent = /** @class */ (function () {\r\n    function BarComponent(el, progress, renderer) {\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.addClass = true;\r\n        this.percent = 0;\r\n        this.progress = progress;\r\n    }\r\n    Object.defineProperty(BarComponent.prototype, \"type\", {\r\n        /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\r\n        get: /**\r\n         * provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger`\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._type;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            this._type = v;\r\n            this.applyTypeClasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BarComponent.prototype, \"value\", {\r\n        /** current value of progress bar */\r\n        get: /**\r\n         * current value of progress bar\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._value;\r\n        },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            if (!v && v !== 0) {\r\n                return;\r\n            }\r\n            this._value = v;\r\n            this.recalculatePercentage();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BarComponent.prototype, \"setBarWidth\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            this.recalculatePercentage();\r\n            return this.percent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BarComponent.prototype, \"isBs3\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return isBs3();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BarComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.progress.addBar(this);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BarComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.progress.removeBar(this);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BarComponent.prototype.recalculatePercentage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.percent = +(this.value / this.progress.max * 100).toFixed(2);\r\n        /** @type {?} */\r\n        var totalPercentage = this.progress.bars\r\n            .reduce((/**\r\n         * @param {?} total\r\n         * @param {?} bar\r\n         * @return {?}\r\n         */\r\n        function (total, bar) {\r\n            return total + bar.percent;\r\n        }), 0);\r\n        if (totalPercentage > 100) {\r\n            this.percent -= totalPercentage - 100;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    BarComponent.prototype.applyTypeClasses = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._prevType) {\r\n            /** @type {?} */\r\n            var barTypeClass = \"progress-bar-\" + this._prevType;\r\n            /** @type {?} */\r\n            var bgClass = \"bg-\" + this._prevType;\r\n            this.renderer.removeClass(this.el.nativeElement, barTypeClass);\r\n            this.renderer.removeClass(this.el.nativeElement, bgClass);\r\n            this._prevType = null;\r\n        }\r\n        if (this._type) {\r\n            /** @type {?} */\r\n            var barTypeClass = \"progress-bar-\" + this._type;\r\n            /** @type {?} */\r\n            var bgClass = \"bg-\" + this._type;\r\n            this.renderer.addClass(this.el.nativeElement, barTypeClass);\r\n            this.renderer.addClass(this.el.nativeElement, bgClass);\r\n            this._prevType = this._type;\r\n        }\r\n    };\r\n    BarComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'bar',\r\n                    template: \"<ng-content></ng-content>\\n\",\r\n                    host: {\r\n                        role: 'progressbar',\r\n                        'aria-valuemin': '0',\r\n                        '[class.progress-bar-animated]': '!isBs3 && animate',\r\n                        '[class.progress-bar-striped]': 'striped',\r\n                        '[class.active]': 'isBs3 && animate',\r\n                        '[attr.aria-valuenow]': 'value',\r\n                        '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\r\n                        '[attr.aria-valuemax]': 'max',\r\n                        '[style.height.%]': '\"100\"'\r\n                    }\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    BarComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: ProgressbarComponent, decorators: [{ type: Host }] },\r\n        { type: Renderer2 }\r\n    ]; };\r\n    BarComponent.propDecorators = {\r\n        type: [{ type: Input }],\r\n        value: [{ type: Input }],\r\n        setBarWidth: [{ type: HostBinding, args: ['style.width.%',] }],\r\n        addClass: [{ type: HostBinding, args: ['class.progress-bar',] }]\r\n    };\r\n    return BarComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ProgressbarModule = /** @class */ (function () {\r\n    function ProgressbarModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ProgressbarModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return { ngModule: ProgressbarModule, providers: [ProgressbarConfig] };\r\n    };\r\n    ProgressbarModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [BarComponent, ProgressbarComponent],\r\n                    exports: [BarComponent, ProgressbarComponent]\r\n                },] }\r\n    ];\r\n    return ProgressbarModule;\r\n}());\r\n\r\nexport { BarComponent, ProgressbarComponent, ProgressbarConfig, ProgressbarModule };\r\n//# sourceMappingURL=ngx-bootstrap-progressbar.js.map\r\n","import { Injectable, Component, ChangeDetectionStrategy, Directive, ViewContainerRef, ElementRef, Renderer2, Input, Output, HostBinding, EventEmitter, NgModule } from '@angular/core';\r\nimport { isBs3, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\r\nimport { __decorate, __metadata } from 'tslib';\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\nimport { PositioningService } from 'ngx-bootstrap/positioning';\r\nimport { timer } from 'rxjs';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Default values provider for tooltip\r\n */\r\nvar TooltipConfig = /** @class */ (function () {\r\n    function TooltipConfig() {\r\n        /**\r\n         * sets disable adaptive position\r\n         */\r\n        this.adaptivePosition = true;\r\n        /**\r\n         * tooltip placement, supported positions: 'top', 'bottom', 'left', 'right'\r\n         */\r\n        this.placement = 'top';\r\n        /**\r\n         * array of event names which triggers tooltip opening\r\n         */\r\n        this.triggers = 'hover focus';\r\n        /**\r\n         * delay before showing the tooltip\r\n         */\r\n        this.delay = 0;\r\n    }\r\n    TooltipConfig.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    return TooltipConfig;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TooltipContainerComponent = /** @class */ (function () {\r\n    function TooltipContainerComponent(config) {\r\n        Object.assign(this, config);\r\n    }\r\n    Object.defineProperty(TooltipContainerComponent.prototype, \"isBs3\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return isBs3();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TooltipContainerComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.classMap = { in: false, fade: false };\r\n        this.classMap[this.placement] = true;\r\n        this.classMap[\"tooltip-\" + this.placement] = true;\r\n        this.classMap.in = true;\r\n        if (this.animation) {\r\n            this.classMap.fade = true;\r\n        }\r\n        if (this.containerClass) {\r\n            this.classMap[this.containerClass] = true;\r\n        }\r\n    };\r\n    TooltipContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'bs-tooltip-container',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    // tslint:disable-next-line\r\n                    host: {\r\n                        '[class]': '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\r\n                        '[class.show]': '!isBs3',\r\n                        '[class.bs3]': 'isBs3',\r\n                        '[attr.id]': 'this.id',\r\n                        role: 'tooltip'\r\n                    },\r\n                    template: \"\\n    <div class=\\\"tooltip-arrow arrow\\\"></div>\\n    <div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\\n    \",\r\n                    styles: [\"\\n    :host.tooltip {\\n      display: block;\\n      pointer-events: none;\\n    }\\n    :host.bs3.tooltip.top>.arrow {\\n      margin-left: -2px;\\n    }\\n    :host.bs3.tooltip.bottom {\\n      margin-top: 0px;\\n    }\\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\\n      margin: 0px;\\n    }\\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\\n      margin: .3rem 0;\\n    }\\n  \"]\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    TooltipContainerComponent.ctorParameters = function () { return [\r\n        { type: TooltipConfig }\r\n    ]; };\r\n    return TooltipContainerComponent;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar id = 0;\r\nvar TooltipDirective = /** @class */ (function () {\r\n    function TooltipDirective(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\r\n        this._elementRef = _elementRef;\r\n        this._renderer = _renderer;\r\n        this._positionService = _positionService;\r\n        this.tooltipId = id++;\r\n        /**\r\n         * Fired when tooltip content changes\r\n         */\r\n        /* tslint:disable-next-line:no-any */\r\n        this.tooltipChange = new EventEmitter();\r\n        /**\r\n         * Css class for tooltip container\r\n         */\r\n        this.containerClass = '';\r\n        /**\r\n         * @deprecated - removed, will be added to configuration\r\n         */\r\n        this.tooltipAnimation = true;\r\n        /**\r\n         * @deprecated\r\n         */\r\n        this.tooltipFadeDuration = 150;\r\n        this.ariaDescribedby = \"tooltip-\" + this.tooltipId;\r\n        /**\r\n         * @deprecated\r\n         */\r\n        this.tooltipStateChanged = new EventEmitter();\r\n        this._tooltip = cis\r\n            .createLoader(this._elementRef, _viewContainerRef, this._renderer)\r\n            .provide({ provide: TooltipConfig, useValue: config });\r\n        Object.assign(this, config);\r\n        this.onShown = this._tooltip.onShown;\r\n        this.onHidden = this._tooltip.onHidden;\r\n    }\r\n    Object.defineProperty(TooltipDirective.prototype, \"isOpen\", {\r\n        /**\r\n         * Returns whether or not the tooltip is currently being shown\r\n         */\r\n        get: /**\r\n         * Returns whether or not the tooltip is currently being shown\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._tooltip.isShown;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (value) {\r\n                this.show();\r\n            }\r\n            else {\r\n                this.hide();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"htmlContent\", {\r\n        /** @deprecated - please use `tooltip` instead */\r\n        set: /**\r\n         * @deprecated - please use `tooltip` instead\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\r\n            this.tooltip = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_placement\", {\r\n        /** @deprecated - please use `placement` instead */\r\n        set: /**\r\n         * @deprecated - please use `placement` instead\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\r\n            this.placement = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_isOpen\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n            return this.isOpen;\r\n        },\r\n        /** @deprecated - please use `isOpen` instead */\r\n        set: /**\r\n         * @deprecated - please use `isOpen` instead\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\r\n            this.isOpen = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_enable\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n            return this.isDisabled;\r\n        },\r\n        /** @deprecated - please use `isDisabled` instead */\r\n        set: /**\r\n         * @deprecated - please use `isDisabled` instead\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\r\n            this.isDisabled = !value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_appendToBody\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\r\n            return this.container === 'body';\r\n        },\r\n        /** @deprecated - please use `container=\"body\"` instead */\r\n        set: /**\r\n         * @deprecated - please use `container=\"body\"` instead\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\r\n            this.container = value ? 'body' : this.container;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_popupClass\", {\r\n        /** @deprecated - will replaced with customClass */\r\n        set: /**\r\n         * @deprecated - will replaced with customClass\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipClass deprecated');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipContext\", {\r\n        /** @deprecated - removed */\r\n        set: /**\r\n         * @deprecated - removed\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipContext deprecated');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipPopupDelay\", {\r\n        /** @deprecated */\r\n        set: /**\r\n         * @deprecated\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\r\n            this.delay = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TooltipDirective.prototype, \"_tooltipTrigger\", {\r\n        /** @deprecated -  please use `triggers` instead */\r\n        get: /**\r\n         * @deprecated -  please use `triggers` instead\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n            return this.triggers;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\r\n            this.triggers = (value || '').toString();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TooltipDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._tooltip.listen({\r\n            triggers: this.triggers,\r\n            show: (/**\r\n             * @return {?}\r\n             */\r\n            function () { return _this.show(); })\r\n        });\r\n        /* tslint:disable-next-line:no-any */\r\n        this.tooltipChange.subscribe((/**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (!value) {\r\n                _this._tooltip.hide();\r\n            }\r\n        }));\r\n    };\r\n    /**\r\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\r\n    /**\r\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     * @return {?}\r\n     */\r\n    TooltipDirective.prototype.toggle = /**\r\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.isOpen) {\r\n            return this.hide();\r\n        }\r\n        this.show();\r\n    };\r\n    /**\r\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\r\n    /**\r\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     * @return {?}\r\n     */\r\n    TooltipDirective.prototype.show = /**\r\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._positionService.setOptions({\r\n            modifiers: {\r\n                flip: {\r\n                    enabled: this.adaptivePosition\r\n                },\r\n                preventOverflow: {\r\n                    enabled: this.adaptivePosition\r\n                }\r\n            }\r\n        });\r\n        if (this.isOpen ||\r\n            this.isDisabled ||\r\n            this._delayTimeoutId ||\r\n            !this.tooltip) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        var showTooltip = (/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (_this._delayTimeoutId) {\r\n                _this._delayTimeoutId = undefined;\r\n            }\r\n            _this._tooltip\r\n                .attach(TooltipContainerComponent)\r\n                .to(_this.container)\r\n                .position({ attachment: _this.placement })\r\n                .show({\r\n                content: _this.tooltip,\r\n                placement: _this.placement,\r\n                containerClass: _this.containerClass,\r\n                id: _this.ariaDescribedby\r\n            });\r\n        });\r\n        /** @type {?} */\r\n        var cancelDelayedTooltipShowing = (/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (_this._tooltipCancelShowFn) {\r\n                _this._tooltipCancelShowFn();\r\n            }\r\n        });\r\n        if (this.delay) {\r\n            /** @type {?} */\r\n            var _timer_1 = timer(this.delay).subscribe((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                showTooltip();\r\n                cancelDelayedTooltipShowing();\r\n            }));\r\n            if (this.triggers) {\r\n                parseTriggers(this.triggers)\r\n                    .forEach((/**\r\n                 * @param {?} trigger\r\n                 * @return {?}\r\n                 */\r\n                function (trigger) {\r\n                    _this._tooltipCancelShowFn = _this._renderer.listen(_this._elementRef.nativeElement, trigger.close, (/**\r\n                     * @return {?}\r\n                     */\r\n                    function () {\r\n                        _timer_1.unsubscribe();\r\n                        cancelDelayedTooltipShowing();\r\n                    }));\r\n                }));\r\n            }\r\n        }\r\n        else {\r\n            showTooltip();\r\n        }\r\n    };\r\n    /**\r\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\r\n    /**\r\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     * @return {?}\r\n     */\r\n    TooltipDirective.prototype.hide = /**\r\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this._delayTimeoutId) {\r\n            clearTimeout(this._delayTimeoutId);\r\n            this._delayTimeoutId = undefined;\r\n        }\r\n        if (!this._tooltip.isShown) {\r\n            return;\r\n        }\r\n        this._tooltip.instance.classMap.in = false;\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this._tooltip.hide();\r\n        }), this.tooltipFadeDuration);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TooltipDirective.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._tooltip.dispose();\r\n    };\r\n    TooltipDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[tooltip], [tooltipHtml]',\r\n                    exportAs: 'bs-tooltip'\r\n                },] }\r\n    ];\r\n    /** @nocollapse */\r\n    TooltipDirective.ctorParameters = function () { return [\r\n        { type: ViewContainerRef },\r\n        { type: ComponentLoaderFactory },\r\n        { type: TooltipConfig },\r\n        { type: ElementRef },\r\n        { type: Renderer2 },\r\n        { type: PositioningService }\r\n    ]; };\r\n    TooltipDirective.propDecorators = {\r\n        adaptivePosition: [{ type: Input }],\r\n        tooltip: [{ type: Input }],\r\n        tooltipChange: [{ type: Output }],\r\n        placement: [{ type: Input }],\r\n        triggers: [{ type: Input }],\r\n        container: [{ type: Input }],\r\n        containerClass: [{ type: Input }],\r\n        isOpen: [{ type: Input }],\r\n        isDisabled: [{ type: Input }],\r\n        delay: [{ type: Input }],\r\n        onShown: [{ type: Output }],\r\n        onHidden: [{ type: Output }],\r\n        htmlContent: [{ type: Input, args: ['tooltipHtml',] }],\r\n        _placement: [{ type: Input, args: ['tooltipPlacement',] }],\r\n        _isOpen: [{ type: Input, args: ['tooltipIsOpen',] }],\r\n        _enable: [{ type: Input, args: ['tooltipEnable',] }],\r\n        _appendToBody: [{ type: Input, args: ['tooltipAppendToBody',] }],\r\n        tooltipAnimation: [{ type: Input }],\r\n        _popupClass: [{ type: Input, args: ['tooltipClass',] }],\r\n        _tooltipContext: [{ type: Input, args: ['tooltipContext',] }],\r\n        _tooltipPopupDelay: [{ type: Input, args: ['tooltipPopupDelay',] }],\r\n        tooltipFadeDuration: [{ type: Input }],\r\n        _tooltipTrigger: [{ type: Input, args: ['tooltipTrigger',] }],\r\n        ariaDescribedby: [{ type: HostBinding, args: ['attr.aria-describedby',] }],\r\n        tooltipStateChanged: [{ type: Output }]\r\n    };\r\n    __decorate([\r\n        OnChange(),\r\n        __metadata(\"design:type\", Object)\r\n    ], TooltipDirective.prototype, \"tooltip\", void 0);\r\n    return TooltipDirective;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar TooltipModule = /** @class */ (function () {\r\n    function TooltipModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TooltipModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            ngModule: TooltipModule,\r\n            providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\r\n        };\r\n    };\r\n    TooltipModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [TooltipDirective, TooltipContainerComponent],\r\n                    exports: [TooltipDirective],\r\n                    entryComponents: [TooltipContainerComponent]\r\n                },] }\r\n    ];\r\n    return TooltipModule;\r\n}());\r\n\r\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };\r\n//# sourceMappingURL=ngx-bootstrap-tooltip.js.map\r\n"],"sourceRoot":"webpack:///"}